import{p as e,y as t,cz as r,cN as s,q as a,e_ as i,ag as n,aT as l,cQ as o,bL as p,bc as u,eX as y,fy as d,eZ as h,eY as m,cE as c,cF as f,cG as g,cJ as b,f9 as v,a as w,U as x,aB as E,L as S,bO as I,dB as O,gB as U,bs as _,ch as P,F as R,aR as j,b7 as F,fz as q,eS as L,gC as M,cI as T}from"../main.js";import{y as W,w as H,l as N,s as B}from"./ExportWMSImageParameters-41c73c1d.js";import{e as C}from"./scaleUtils-b6277eec.js";var A;let D=0,J=A=class extends i{constructor(e){super(e),this._sublayersHandles=new n,this.dimensions=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.legendUrl=null,this.legendEnabled=!0,this.maxScale=0,this.minScale=0,this.popupEnabled=!1,this.queryable=!1,this.spatialReferences=null}get description(){return this._get("description")}set description(e){this._set("description",e)}get fullExtent(){return this._get("fullExtent")}set fullExtent(e){this._set("fullExtent",e)}readExtent(e,t){return(e=t.extent)?l.fromJSON(e):null}get id(){const e=this._get("id");return null==e?D++:e}set id(e){this._set("id",e)}readLegendUrl(e,t){return t?t.legendUrl||t.legendURL:null}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((t=>t.layer=e))}get name(){return this._get("name")}set name(e){this._set("name",e)}set sublayers(e){const t=this._get("sublayers");t&&(t.forEach((e=>{e.layer=null})),this._sublayersHandles.removeAll(),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this._sublayersHandles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))])),this._set("sublayers",e)}castSublayers(e){return o(p.ofType(A),e)}get title(){return this._get("title")}set title(e){this._set("title",e)}get visible(){return this._get("visible")}set visible(e){this._setAndNotifyLayer("visible",e)}clone(){const e=new A;return this.hasOwnProperty("description")&&(e.description=this.description),this.hasOwnProperty("fullExtent")&&(e.fullExtent=this.fullExtent.clone()),this.hasOwnProperty("fullExtents")&&(e.fullExtents=this.fullExtents.map((e=>e.clone()))),this.hasOwnProperty("featureInfoFormat")&&(e.featureInfoFormat=this.featureInfoFormat),this.hasOwnProperty("featureInfoUrl")&&(e.featureInfoUrl=this.featureInfoUrl),this.hasOwnProperty("legendUrl")&&(e.legendUrl=this.legendUrl),this.hasOwnProperty("legendEnabled")&&(e.legendEnabled=this.legendEnabled),this.hasOwnProperty("layer")&&(e.layer=this.layer),this.hasOwnProperty("name")&&(e.name=this.name),this.hasOwnProperty("parent")&&(e.parent=this.parent),this.hasOwnProperty("queryable")&&(e.queryable=this.queryable),this.hasOwnProperty("sublayers")&&(e.sublayers=this.sublayers&&this.sublayers.map((e=>e.clone()))),this.hasOwnProperty("spatialReferences")&&(e.spatialReferences=this.spatialReferences.map((e=>e))),this.hasOwnProperty("visible")&&(e.visible=this.visible),this.hasOwnProperty("title")&&(e.title=this.title),e}_setAndNotifyLayer(e,t){const r=this.layer;this._get(e)!==t&&(this._set(e,t),r&&r.emit("wms-sublayer-update",{propertyName:e,id:this.id}))}};e([t()],J.prototype,"description",null),e([t({readOnly:!0})],J.prototype,"dimensions",void 0),e([t({value:null})],J.prototype,"fullExtent",null),e([r("fullExtent",["extent"])],J.prototype,"readExtent",null),e([t()],J.prototype,"fullExtents",void 0),e([t()],J.prototype,"featureInfoFormat",void 0),e([t()],J.prototype,"featureInfoUrl",void 0),e([t({type:Number,json:{write:{enabled:!1,overridePolicy:()=>({ignoreOrigin:!0,enabled:!0})}}})],J.prototype,"id",null),e([t({type:String,json:{origins:{"web-document":{read:{source:["legendUrl","legendURL"]},write:{target:"legendUrl",ignoreOrigin:!0}}},read:{source:"legendURL"},write:{ignoreOrigin:!0}}})],J.prototype,"legendUrl",void 0),e([r(["web-document"],"legendUrl")],J.prototype,"readLegendUrl",null),e([t({value:!0,type:Boolean,json:{read:{source:"showLegend"},write:{target:"showLegend"},origins:{"web-map":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],J.prototype,"legendEnabled",void 0),e([t({value:null})],J.prototype,"layer",null),e([t()],J.prototype,"maxScale",void 0),e([t()],J.prototype,"minScale",void 0),e([t({type:String,value:null,json:{read:{source:"name"},write:{ignoreOrigin:!0}}})],J.prototype,"name",null),e([t()],J.prototype,"parent",void 0),e([t({type:Boolean,json:{read:{source:"showPopup"},write:{ignoreOrigin:!0,target:"showPopup"}}})],J.prototype,"popupEnabled",void 0),e([t({type:Boolean,json:{write:{ignoreOrigin:!0}}})],J.prototype,"queryable",void 0),e([t()],J.prototype,"sublayers",null),e([s("sublayers")],J.prototype,"castSublayers",null),e([t({type:[Number],json:{read:{source:"spatialReferences"}}})],J.prototype,"spatialReferences",void 0),e([t({type:String,value:null,json:{write:{ignoreOrigin:!0}}})],J.prototype,"title",null),e([t({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"}}})],J.prototype,"visible",null),J=A=e([a("esri.layers.support.WMSSublayer")],J);var V=J;const k=new u({bmp:"image/bmp",gif:"image/gif",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},{ignoreUnknown:!1});let z=class extends(y(d(h(m(c(f(g(b)))))))){constructor(...e){super(...e),this._sublayersHandles=new n,this.allSublayers=new v({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.customParameters=null,this.customLayerParameters=null,this.copyright=null,this.description=null,this.dimensions=null,this.fullExtent=null,this.fullExtents=null,this.featureInfoFormat=null,this.featureInfoUrl=null,this.imageFormat=null,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.legendEnabled=!0,this.mapUrl=null,this.isReference=null,this.operationalLayerType="WMS",this.spatialReference=null,this.spatialReferences=null,this.sublayers=null,this.type="wms",this.url=null,this.version=null,this.watch("sublayers",((e,t)=>{t&&(t.forEach((e=>{e.layer=null})),this._sublayersHandles.removeAll(),this._sublayersHandles=null),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this._sublayersHandles||(this._sublayersHandles=new n),this._sublayersHandles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))]))}),!0)}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){var e;null==(e=this._exportWMSImageParameters)||e.destroy()}load(e){const t=w(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),x(this)}readFullExtentFromItemOrMap(e,t){const r=t.extent;return new l({xmin:r[0][0],ymin:r[0][1],xmax:r[1][0],ymax:r[1][1]})}writeFullExtent(e,t){t.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("image/png")>-1?"image/png":r&&r[0]}readSpatialReferenceFromItemOrDocument(e,t){return new E(t.spatialReferences[0])}writeSpatialReferences(e,t){const r=this.spatialReference&&this.spatialReference.wkid;e&&r?(t.spatialReferences=e.filter((e=>e!==r)),t.spatialReferences.unshift(r)):t.spatialReferences=e}readSublayersFromItemOrMap(e,t,r){return G(t.layers,r,t.visibleLayers)}readSublayers(e,t,r){return G(t.layers,r)}writeSublayers(e,t,r,s){t.layers=[];const a=new Map,i=e.flatten((({sublayers:e})=>e&&e.toArray())).toArray();i.forEach((e=>{"number"==typeof e.parent.id&&(a.has(e.parent.id)?a.get(e.parent.id).push(e.id):a.set(e.parent.id,[e.id]))})),i.forEach((e=>{const r={sublayer:e,...s},i=e.write({parentLayerId:"number"==typeof e.parent.id?e.parent.id:-1},r);if(a.has(e.id)&&(i.sublayerIds=a.get(e.id)),!e.sublayers&&e.name){const s=e.write({},r);delete s.id,t.layers.push(s)}})),t.visibleLayers=i.filter((e=>e.visible&&!e.sublayers)).map((e=>e.name))}createExportImageParameters(e,t,r,s){var a;const i=s&&s.pixelRatio||1,n=C({extent:e,width:t})*i;return null==(a=this._exportWMSImageParameters)||a.destroy(),this._exportWMSImageParameters=new W({layer:this,extent:e,scale:n}),this._exportWMSImageParameters.toJSON()}async fetchImage(e,t,r,s){var a,i;const n=this.mapUrl,l=this.createExportImageParameters(e,t,r,s);if(!l.layers){const e=document.createElement("canvas");return e.width=t,e.height=r,e}const o=null==s||null==(a=s.timeExtent)?void 0:a.start,p=null==s||null==(i=s.timeExtent)?void 0:i.end,u=o&&p?o.getTime()===p.getTime()?H(o):`${H(o)}/${H(p)}`:void 0,y={responseType:"image",query:this._mixCustomParameters({width:t,height:r,...l,time:u}),signal:null==s?void 0:s.signal};return(null==s?void 0:s.timestamp)&&(y.query={_ts:s.timestamp,...y.query}),S(n,y).then((e=>e.data))}fetchFeatureInfo(e,t,r,s,a){const i=N(this._exportWMSImageParameters.visibleSublayers);if(!this.featureInfoUrl||!i)return null;const n="1.3.0"===this.version?{I:s,J:a}:{x:s,y:a},l={query_layers:i,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:t,height:r,...n};let o={...this.createExportImageParameters(e,t,r),...l};return o=this._mixCustomParameters(o),S(this.featureInfoUrl,{query:o,responseType:"text"}).then((e=>{let t=this.featureInfoUrl;t+=-1===t.indexOf("?")?"?":"";for(const e in o)t+="?"===t.substring(t.length-1,t.length)?"":"&",t+=e+"="+o[e];const r=document.createElement("iframe");return r.src=t,r.frameBorder="0",r.marginHeight="0",r.marginWidth="0",r.innerHTML=e.data,r.style.width="100%",new I({sourceLayer:this,popupTemplate:new O({title:this.title,content:r})})}))}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}findSublayerByName(e){return this.allSublayers.find((t=>t.name===e))}supportsSpatialReference(e){return U(this.url)||this.spatialReferences.some((t=>{const r=900913===t?E.WebMercator:new E({wkid:t});return _(r,e)}))}async _fetchService(e){if(!this.resourceInfo){this.parsedUrl.query&&this.parsedUrl.query.service&&(this.parsedUrl.query.SERVICE=this.parsedUrl.query.service,delete this.parsedUrl.query.service),this.parsedUrl.query&&this.parsedUrl.query.request&&(this.parsedUrl.query.REQUEST=this.parsedUrl.query.request,delete this.parsedUrl.query.request);const t=await S(this.parsedUrl.path,{query:{SERVICE:"WMS",REQUEST:"GetCapabilities",...this.parsedUrl.query,...this.customParameters},responseType:"xml",signal:e});this.resourceInfo=B(t.data)}if(this.parsedUrl){const e=new P(this.parsedUrl.path);"https"!==e.scheme||e.port&&"443"!==e.port||-1!==R.request.httpsDomains.indexOf(e.host)||R.request.httpsDomains.push(e.host)}this.read(this.resourceInfo,{origin:"service"})}_mixCustomParameters(e){if(!this.customLayerParameters&&!this.customParameters)return e;const t={...this.customParameters,...this.customLayerParameters};for(const r in t)e[r.toLowerCase()]=t[r];return e}};function G(e,t,r){const s=new Map;e.every((e=>null==e.id))&&(e=j(e)).forEach(((e,t)=>e.id=t));for(const a of e){const e=new V;e.read(a,t),-1===(null==r?void 0:r.indexOf(e.name))&&(e.visible=!1),s.set(e.id,e)}const a=[];for(const t of e){const e=s.get(t.id);if(null!=t.parentLayerId&&t.parentLayerId>=0){const r=s.get(t.parentLayerId);r.sublayers||(r.sublayers=new p),r.sublayers.unshift(e)}else a.unshift(e)}return a}e([t({readOnly:!0})],z.prototype,"allSublayers",void 0),e([t({json:{type:Object,write:!0}})],z.prototype,"customParameters",void 0),e([t({json:{type:Object,write:!0}})],z.prototype,"customLayerParameters",void 0),e([t({type:String,json:{write:!0}})],z.prototype,"copyright",void 0),e([t()],z.prototype,"description",void 0),e([t({readOnly:!0})],z.prototype,"dimensions",void 0),e([t({json:{type:[[Number]],read:{source:"extent"},write:{target:"extent"},origins:{service:{read:{source:"extent"}}}}})],z.prototype,"fullExtent",void 0),e([r(["web-document","portal-item"],"fullExtent",["extent"])],z.prototype,"readFullExtentFromItemOrMap",null),e([F(["web-document","portal-item"],"fullExtent",{extent:{type:[[Number]]}})],z.prototype,"writeFullExtent",null),e([t()],z.prototype,"fullExtents",void 0),e([t({type:String,json:{write:{ignoreOrigin:!0}}})],z.prototype,"featureInfoFormat",void 0),e([t({type:String,json:{write:{ignoreOrigin:!0}}})],z.prototype,"featureInfoUrl",void 0),e([t({type:String,json:{origins:{"web-document":{default:"image/png",type:k.jsonValues,read:{reader:k.read,source:"format"},write:{writer:k.write,target:"format"}}}}})],z.prototype,"imageFormat",void 0),e([r("imageFormat",["supportedImageFormatTypes"])],z.prototype,"readImageFormat",null),e([t({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],z.prototype,"imageMaxHeight",void 0),e([t({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],z.prototype,"imageMaxWidth",void 0),e([t()],z.prototype,"imageTransparency",void 0),e([t(q)],z.prototype,"legendEnabled",void 0),e([t({type:["show","hide","hide-children"]})],z.prototype,"listMode",void 0),e([t({type:String,json:{write:{ignoreOrigin:!0}}})],z.prototype,"mapUrl",void 0),e([t({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),e([t({type:["WMS"]})],z.prototype,"operationalLayerType",void 0),e([t({type:E,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],z.prototype,"spatialReference",void 0),e([r(["web-document","portal-item"],"spatialReference",["spatialReferences"])],z.prototype,"readSpatialReferenceFromItemOrDocument",null),e([t({type:[L],json:{read:{source:"spatialReferences"},write:{ignoreOrigin:!0}}})],z.prototype,"spatialReferences",void 0),e([F(["web-document","portal-item"],"spatialReferences")],z.prototype,"writeSpatialReferences",null),e([t({type:p.ofType(V),json:{write:{target:"layers",overridePolicy(e,t,r){if(function(e,t){return e.some((e=>{for(const r in e)if(M(e,r,null,t))return!0;return!1}))}(this.allSublayers,r))return{ignoreOrigin:!0}}}}})],z.prototype,"sublayers",void 0),e([r(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],z.prototype,"readSublayersFromItemOrMap",null),e([r("service","sublayers",["layers"])],z.prototype,"readSublayers",null),e([F("sublayers",{layers:{type:[V]},visibleLayers:{type:[String]}})],z.prototype,"writeSublayers",null),e([t({json:{read:!1},readOnly:!0,value:"wms"})],z.prototype,"type",void 0),e([t(T)],z.prototype,"url",void 0),e([t({type:String,json:{write:{ignoreOrigin:!0}}})],z.prototype,"version",void 0),z=e([a("esri.layers.WMSLayer")],z);var Q=z;export default Q;
