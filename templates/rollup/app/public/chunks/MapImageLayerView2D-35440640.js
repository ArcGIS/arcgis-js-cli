import{p as e,y as t,q as a,bo as r,k as i,v as s,a as o,bW as m,dj as p,i as n,d1 as d,T as l,Q as h}from"../main.js";import"./featureConversionUtils-0e5f7c52.js";import"./definitions-5e24d82a.js";import"./RenderingContext-81847018.js";import"./Utils-b46864a6.js";import"./earcut-69661edf.js";import"./GeometryUtils-2b0c8e16.js";import"./VertexArrayObject-17b5c9bd.js";import"./ShaderCompiler-2335fa5a.js";import"./Container-c6c95dc1.js";import"./mat4f32-a7ddfa75.js";import"./WGLContainer-720c8185.js";import"./MaterialKey-a89f5ca3.js";import{l as u,p as c}from"./LayerView2D-6e7585a5.js";import{n as y}from"./clickToleranceUtils-c77be34a.js";import{a as g}from"./drapedUtils-c5c5241c.js";import"./Bitmap-a30fe19d.js";import{i as f,d as v}from"./popupUtils-2a195f64.js";import{t as w}from"./BitmapContainer-9f88d8f9.js";import{w as b}from"./ExportStrategy-2371daad.js";import"./sublayerUtils-be50c78c.js";import{y as j}from"./ExportImageParameters-5c93286e.js";const x=n=>{let d=class extends n{async fetchPopupFeatures(e,t){const{layer:a}=this;if(!e)return r(new i("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const p=this.get("view.scale"),n=[],d=async e=>{const a=0===e.minScale||p<=e.minScale,r=0===e.maxScale||p>=e.maxScale;if(e.visible&&a&&r)if(e.sublayers)e.sublayers.forEach(d);else if(e.popupEnabled){const a=v(e,{...t,defaultPopupTemplateEnabled:!1});o(a)&&n.push({sublayer:e,popupTemplate:a})}},l=a.sublayers.toArray().map(d);await s(l);const h=n.map((async({sublayer:a,popupTemplate:r})=>{await a.load().catch((()=>{}));const i=a.createQuery(),s=o(t)?t.event:null,m=y({renderer:a.renderer,event:s}),p=this.createFetchPopupFeaturesQueryGeometry(e,m);i.geometry=p,i.outFields=await f(a,r);const n=await this._loadArcadeModules(r);return n&&n.arcadeUtils.hasGeometryOperations(r)||(i.maxAllowableOffset=p.width/m),(await a.queryFeatures(i)).features}));return(await m(h)).reduce(((e,t)=>t.value?[...e,...t.value]:e),[]).filter((e=>null!=e))}canResume(){var e,t;return!!super.canResume()&&!(null==(e=this.imageParameters)||null==(t=e.timeExtent)?void 0:t.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return p()}};return e([t()],d.prototype,"imageParameters",void 0),e([t()],d.prototype,"layer",void 0),e([t({dependsOn:["imageParameters.timeExtent"]})],d.prototype,"suspended",void 0),d=e([a("esri.views.layers.MapImageLayerView")],d),d},C=n.getLogger("esri.views.2d.layers.MapImageLayerView2D");let P=class extends(x(d(u(c)))){constructor(){super(...arguments),this._exportImageVersion=-1}hitTest(){return null}update(e){this.strategy.update(e).catch((e=>{l(e)||C.error(e)}))}attach(){const{imageMaxWidth:e,imageMaxHeight:t,version:a}=this.layer,r=a>=10.3,i=a>=10;this._bitmapContainer=new w,this.container.addChild(this._bitmapContainer),this.strategy=new b({container:this._bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:e,imageMaxHeight:t,imageRotationSupported:r,imageNormalizationSupported:i,hidpi:!0}),this.imageParameters=new j({view:this.view,layer:this.layer}),this.handles.add(h(this.imageParameters,"version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),"mapimagelayerview-update")}detach(){this.strategy.destroy(),this.handles.remove("mapimagelayerview-update"),this.imageParameters.destroy(),this.imageParameters=null,this._exportImageVersion=-1,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return g(e,t,this.view)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,a,r){return this.layer.fetchImage(e,t,a,{timeExtent:this.imageParameters.timeExtent,timestamp:this.refreshTimestamp,...r})}};e([t()],P.prototype,"strategy",void 0),e([t({dependsOn:["strategy.updating"]})],P.prototype,"updating",void 0),P=e([a("esri.views.2d.layers.MapImageLayerView2D")],P);var U=P;export default U;
