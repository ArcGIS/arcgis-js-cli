import{eX as e,cE as t,cF as l,cG as o,cJ as a,eI as r,U as n,p as s,y as i,bL as u,cz as c,q as p}from"../main.js";let m=class extends(e(t(l(o(a))))){constructor(e){super(e),this.type="map-notes"}get fullExtent(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>e?e.union(t.fullExtent):t.fullExtent),null):null}readFeatureCollectionsFromItem(e,t,l){return t.layers.map((e=>{const t=new r;return t.read(e,l),t}))}readFeatureCollectionsFromWebMap(e,t,l){return t.featureCollection.layers.map((e=>{const t=new r;return t.read(e,l),t}))}get minScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),null):0}set minScale(e){this.featureCollections.forEach((t=>{t.minScale=e})),this._set("minScale",e)}get maxScale(){return this.featureCollections?this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),null):0}set maxScale(e){this.featureCollections.forEach((t=>{t.maxScale=e})),this._set("maxScale",e)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),n(this)}};s([i({dependsOn:["featureCollections"],readOnly:!0})],m.prototype,"fullExtent",null),s([i({type:["show","hide"]})],m.prototype,"listMode",void 0),s([i({type:u.ofType(r)})],m.prototype,"featureCollections",void 0),s([c("portal-item","featureCollections",["layers"])],m.prototype,"readFeatureCollectionsFromItem",null),s([c("web-map","featureCollections",["featureCollection.layers"])],m.prototype,"readFeatureCollectionsFromWebMap",null),s([i({dependsOn:["featureCollections"]})],m.prototype,"minScale",null),s([i({dependsOn:["featureCollections"]})],m.prototype,"maxScale",null),s([i({readOnly:!0,json:{read:!1}})],m.prototype,"type",void 0),m=s([p("esri.layers.MapNotesLayer")],m);var d=m;export default d;
