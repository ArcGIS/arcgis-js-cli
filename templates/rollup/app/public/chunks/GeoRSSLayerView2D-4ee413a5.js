import{U as e,v as i,cA as t,bL as s,bO as r,dB as a,dC as o,Q as p,dD as n,p as l,q as h}from"../main.js";import"./featureConversionUtils-0e5f7c52.js";import"./centroid-aa1305d6.js";import"./FeatureSetReader-b7349ae0.js";import"./json-9a5f5790.js";import"./quantizationUtils-779d11a7.js";import"./quickselect-efd045df.js";import"./ComputedAttributeStorage-82041b67.js";import"./definitions-5e24d82a.js";import"./RenderingContext-81847018.js";import"./Utils-b46864a6.js";import"./CircularArray-e829d2b1.js";import"./visualVariablesUtils-a8352e1b.js";import"./earcut-69661edf.js";import"./TurboLine-c366e7cd.js";import"./Rect-31175b04.js";import"./GeometryUtils-2b0c8e16.js";import"./BidiEngine-b37d0381.js";import"./VertexArrayObject-17b5c9bd.js";import"./ShaderCompiler-2335fa5a.js";import"./Container-c6c95dc1.js";import"./mat4f32-a7ddfa75.js";import"./WGLContainer-720c8185.js";import"./MaterialKey-a89f5ca3.js";import"./shapingUtils-e86a3b68.js";import"./WGLMeshFactory-05a88f56.js";import{t as m}from"./GraphicsView2D-64a51c26.js";import"./FeatureContainer-de88ad63.js";import"./VertexBuffer-06b50273.js";import"./TileContainer-59d09056.js";import"./MD5-f399cfb7.js";import"./graphicsUtils-f2509259.js";import{l as c,p as y}from"./LayerView2D-6e7585a5.js";let d=class extends(c(y)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(t,s){if(this.suspended||!this.graphicsViews.length)return e();const r=this.graphicsViews.reverse().map((e=>e.hitTest(t,s)));return i(r).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((e=>{const i=t.fromJSON(e.featureSet),p=new(s.ofType(r))(i.features);let n;if(this._graphicsViewMap[i.geometryType])n=this._graphicsViewMap[i.geometryType],n.graphics.addMany(p);else{const t=e.layerDefinition.drawingInfo,s=e.popupInfo?a.fromJSON(e.popupInfo):null,r=o(t.renderer);n=new m({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:r}),this._graphicsViewMap[i.geometryType]=n,this._popupTemplates.set(n,s),"polygon"!==i.geometryType||this.layer.polygonSymbol?"polyline"!==i.geometryType||this.layer.lineSymbol?"point"!==i.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=r.symbol):this.layer.lineSymbol=r.symbol:this.layer.polygonSymbol=r.symbol,this.graphicsViews.push(n),this.container.addChild(n.container)}})),this.handles.add([p(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})})),p(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})})),p(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy(),e.view=null,e.renderer=null;this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};d=l([h("esri.views.2d.layers.GeoRSSLayerView2D")],d);var f=d;export default f;
