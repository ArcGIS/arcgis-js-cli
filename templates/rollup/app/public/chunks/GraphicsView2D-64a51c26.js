import{aj as e,ak as t,al as i,am as s,t as r,an as a,ao as o,x as n,ap as h,aq as d,ar as c,as as l,at as p,au as u,j as g,av as _,aw as m,p as y,y as f,q as b,m as G,ax as v,U as w,ay as S,$ as I,A as T,az as U,aA as x,v as C,aB as M,a as A,aC as z,aD as R,aE as O,aF as P,aG as q,T as k,E as F,aH as B,aI as D,aJ as j,aK as H,r as L}from"../main.js";import{H as V,A as N,r as E,o as Q,_ as X,t as Y}from"./featureConversionUtils-0e5f7c52.js";import{n as Z}from"./FeatureSetReader-b7349ae0.js";import{L as J,d as K,i as W,f as $,g as ee}from"./quantizationUtils-779d11a7.js";import{a as te,i as ie,J as se,L as re}from"./ComputedAttributeStorage-82041b67.js";import{P as ae}from"./definitions-5e24d82a.js";import{j as oe,v as ne,n as he}from"./shapingUtils-e86a3b68.js";import{s as de,L as ce,m as le,n as pe}from"./WGLMeshFactory-05a88f56.js";import{l as ue,D as ge,a as _e}from"./FeatureContainer-de88ad63.js";import{z as me,X as ye,D as fe,F as be,E as Ge,G as ve,O as we,K as Se}from"./graphicsUtils-f2509259.js";class Ie{constructor(t=50,i=50){this._pool=new e(Map,void 0,(e=>e.clear()),i,t)}acquire(){return this._pool.acquire()}release(e){this._pool.release(e)}static acquire(){return Te.acquire()}static release(e){return Te.release(e)}}const Te=new Ie(100);class Ue extends te{constructor(e,t){super(e,t,null)}static from(e){const i=Z.createInstance(),s=[],r=e.filter((e=>!!e.geometry));for(const e of r){const i=t(e.geometry);V(s,[e],i,!1,!1,"uid")}return new Ue(i,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Ue(this.instance,this._features);return this.copyInto(e),e}}class xe extends ue{get hasLabels(){return!1}get labelsVisible(){return!1}_renderGraphics(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commitChanges(e),e.context.setStencilFunction(514,i.stencilRef,255),i._displayList.replay(e,i,t))}renderChildren(e){const{painter:t}=e;if(!this.children.some((e=>e.hasData)))return;super.renderChildren(e),this._renderGraphics(e);const i=t.effects.highlight;i.bind(e),this._renderGraphics(e,i.defines),i.draw(e),i.unbind()}}const Ce=new Y,Me=new Y;function Ae(e){e.coords.length=0,e.lengths.length=0}class ze{constructor(){this.bounds=i(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,i,s,r,a){let o;return 0===ze._pool.length?o=new ze:(o=ze._pool.pop(),this._set.delete(o)),o.acquire(e,t,i,s,r,a),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(s(e.geometry)){const i=e.symbol;if(r(i))return null;if(me(i.type)){const i=a(e.geometry);return J(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,i,s,r,a){e&&this.set(e,t,i,s,r,a)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,s,r,a){this.graphic=e,this.geometry=i,this.symbolResource=t,this.updateBounds(s,r,a)}updateBounds(e,t,i){ye(this.bounds,this.size,this.symbolResource,this.geometry,e,t,i)}getGeometryQuantized(e){if(s(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return K(e,{paths:[[t[0][0],t[0][1]]]})}else if(o(this.geometry))return Ae(Ce),Ae(Me),N(Ce,this.geometry),E(Me,Ce,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e.scale[0]),Q(Ce,Me,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e),X(Ce,this.geometry.hasZ,this.geometry.hasM);return K(e,this.geometry)}}ze._pool=[],ze._set=new Set;const Re={minX:0,minY:0,maxX:0,maxY:0},Oe=i(),Pe=[];function qe(e,t,i,s,r){return Re.minX=t,Re.minY=i,Re.maxX=s,Re.maxY=r,e.search(Re)}class ke{constructor(e,t,i,s,r,a){this._graphics=s,this._onAdd=r,this._onRemove=a,this._index=W(9,n("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=i;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level)),this._metersPerUnit=h(e.spatialReference)}hitTest(e,i,s,r,a){e=d(e,this._tileInfoView.spatialReference);const o=.5*r*s;Oe[0]=e-o,Oe[1]=i-o,Oe[2]=e+o,Oe[3]=i+o;const n=.5*r*(s+50),h=qe(this._index,e-n,i-n,e+n,i+n);if(!h||0===h.length)return[];const _={x:e,y:i},m=[];let y;for(const s of h)if(s.graphic.visible)switch(t(s.geometry)){case"esriGeometryPoint":{const e=s.symbol;if(!e)continue;const t=s.geometry,{x:i,y:o}=t,n=r*this._metersPerUnit;let h;switch(e.type){case"esriTS":h=fe(i,o,e,s.size,r,a);break;case"expanded-cim":h=ve(i,o,e,r,n,a);break;case"esriSMS":case"esriPMS":h=be(i,o,e,r,n,a)}c(h,_)&&m.push(s)}break;case"esriGeometryPolyline":{const t=s.symbol;if(!t||!t.layers.length)continue;const a=t.layers[0];y=1.5*r*window.devicePixelRatio*g(a.width),Ge(s.geometry,e,i,y)&&m.push(s)}break;case"esriGeometryEnvelope":{const e=s.geometry,t=p(e.xmin,e.ymin,e.xmax,e.ymax);u(t,Oe)&&m.push(s);break}case"esriGeometryPolygon":{if(c(s.geometry,_)){m.push(s);break}const e=l(s.geometry);if(Math.abs(e.ymax-e.ymin)<5*r||Math.abs(e.xmax-e.xmin)<5*r){const t=p(e.xmin,e.ymin,e.xmax,e.ymax);u(t,Oe)&&m.push(s)}break}case"esriGeometryMultipoint":{const e=s.symbol;if(!e)continue;const t=s.geometry.points;let i;for(let o=0;o<t.length;o++)if(i="esriTS"===e.type?fe(t[o][0],t[o][1],e,s.size,r,a):be(t[o][0],t[o][1],e,r,r*this._metersPerUnit,a),c(i,_)){m.push(s);break}break}}return m.sort(((e,t)=>{const i=we(e.graphic),s=we(t.graphic);return i===s?t.zorder-e.zorder:i-s})),m.map((e=>e.graphic))}getGraphicsData(e,t,i){const s=qe(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);if(0===s.length||0===i.length)return[];s.sort(((e,t)=>e.zorder-t.zorder)),s[0].insertAfter=-1;for(let e=1;e<s.length;e++)s[e].insertAfter=s[e-1].graphic.uid;s.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let r,a=0,o=0;const n=[],h={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const t of i){for(o=-2;a<s.length;)if(r=s[a],a++,t.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const i=r.getGeometryQuantized(h),d={...r.graphic.attributes};d[this._uidFieldName]=t.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),n.push({centroid:ze.getCentroidQuantized(r,h),geometry:i,attributes:d,symbol:r.symbol,groupId:r.groupId,insertAfter:o})}return n}getGraphicData(e,t,i){const s=this._itemByGraphic.get(i);if(!s)return null;const r=qe(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);r.sort(((e,t)=>e.zorder-t.zorder));const a=r.indexOf(s),o=0===a||-1===a?-1:r[a-1].graphic.uid,n={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]},h=s.getGeometryQuantized(n),d={...s.graphic.attributes};return d[this._uidFieldName]=i.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),{centroid:ze.getCentroidQuantized(s,n),geometry:h,attributes:d,symbol:s.symbol,groupId:s.groupId,insertAfter:o}}queryTileData(e,t){const s=50*t.resolution,r=_(t.bounds,s,i()),a=qe(this._index,r[0],r[1],r[2],r[3]),o=[];return this._createTileGraphics(o,e,a,{originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]}),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const s=ze.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,s),i&&this._index.insert(s),s.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let s=0;s<e.length;s++)i=e[s],t=this._itemByGraphic.get(i),t&&(t.zorder=s)}update(e,t,i){const s=this._itemByGraphic.get(e);s.groupId=null;const r=m(s.bounds);return s.size[0]=s.size[1]=0,this._index.remove(s),s.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(s),{oldBounds:r,newBounds:s.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),Pe.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&Pe.push(e)})),this._index.load(Pe)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,s){const r=this._uidFieldName;let a,o,n,h;i.sort(((e,t)=>e.zorder-t.zorder));for(let d=0;d<i.length;d++){n=i[d],a=n.graphic,o=n.getGeometryQuantized(s),h=0===d?-1:i[d-1].graphic.uid;const c={...n.graphic.attributes};c[r]=a.uid,null==n.groupId&&(n.groupId=t.createTemplateGroup(n.symbol,null)),e.push({centroid:ze.getCentroidQuantized(n,s),geometry:o,attributes:c,symbol:n.symbol,groupId:n.groupId,insertAfter:h})}}}const Fe=e=>{let t=class extends e{constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null}};return y([f()],t.prototype,"graphics",void 0),y([f()],t.prototype,"renderer",void 0),y([f()],t.prototype,"updating",void 0),y([f()],t.prototype,"view",void 0),t=y([b("esri.views.layers.GraphicsView")],t),t};function Be(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let De=class extends(Fe(G(v(L)))){constructor(e){super(e),this._storage=new ie,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=w(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={addOrModified:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this),this.addOrUpdateGraphic=this.addOrUpdateGraphic.bind(this),this._processAnalyzedGraphics=this._processAnalyzedGraphics.bind(this),this._graphicsChangeHandler=this._graphicsChangeHandler.bind(this)}_createMatcher(e,t){if(e){const i=oe({indexCount:0,fields:{}},"feature",e);this._matcher=de(i,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new se(this.view.featuresTilingScheme),this.container=new xe(this.view.featuresTilingScheme),this._attributeStore=new re({type:"local",initialize:e=>w(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},S()),this._graphicStore=new ke(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new ce(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new le(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._addOrUpdateGraphic(e,"update",null)})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",this._graphicsChangeHandler),"graphics"),this._attached=!0,this.notifyChange("updating")}))}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return w();const i=this.view.toMap(I(e,t));return this.searchFeatures(i).then((e=>e&&e.length?e[0]:null))}searchFeatures(e,t=2){return T((i=>{i(this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation))}))}update(e){const t=e.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;this._graphicStore.updateLevel(i),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:s}=e,r=t;switch(i){case"attributes":break;case"geometry":case"symbol":this._handleUpdateGraphic(r);break;case"visible":this._setFilterState(r.uid,s),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);return t&&0!==U(t)&&0!==x(t)?this._tileStore.boundsIntersections(t):[]}_updateTile(e){const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified);return this._processGraphics(i).then((i=>(this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0}),i)))}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.addOrModified.add(t);for(const t of e.moved)this._pendingUpdate.addOrModified.add(t);for(const t of e.removed)this._pendingUpdate.addOrModified.has(t)?this._pendingUpdate.addOrModified.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={addOrModified:[],removed:[]};for(const t of this.graphics.items)this._pendingUpdate.addOrModified.has(t)&&e.addOrModified.push(t);return this._pendingUpdate.removed.forEach((t=>{this._graphicStore.has(t)&&e.removed.push(t)})),this._pendingUpdate.addOrModified.clear(),this._pendingUpdate.removed.clear(),e}async _updateGraphics(){this._processing=!0;const{addOrModified:e,removed:t}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let s;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const r=[],a=new Array(e.length);for(let t=0;t<e.length;t++){const i=e[t];a[t]=i,this._graphicsSet.add(i),r.push(this.addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const r of t)s=r.key.id,Be(s,r,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let o;this._flipUpdatingGraphics(),await C(r);for(let e=0;e<a.length;e++){o=a[e];const t=this._getIntersectingTiles(o);for(const e of t)s=e.key.id,Be(s,e,i).addedOrModified.push(o)}this._graphicStore.updateZ();const n=[];i.forEach((e=>n.push(this._updateTile(e)))),await C(n)}catch(e){}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const i=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return r(e.geometry)?null:{geometryType:t(e.geometry),spatialReference:M.fromJSON(e.geometry.spatialReference),fields:i}}async _getSymbolForGraphic(e,t){return A(e.symbol)?e.symbol:A(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if(!this.container.stage)return w(null);const i=this._getArcadeInfo(e),s=await this._getSymbolForGraphic(e,t),r=ne(s),a=await pe(r,i,t);if("esriTS"===a.type){const e=[],[t]=he(a.text);for(let i=0;i<t.length;i++)e.push(t.charCodeAt(i));const i={symbol:a,id:0,glyphIds:e},[{mosaicItem:s}]=await this.container.getMaterialItems([i]);return{symbol:a,mosaicItem:s}}return{symbol:a,mosaicItem:null}}async _projectAndNormalizeGeometry(e){if(r(e.geometry))return w(null);let t=e.geometry;if(s(t)){const e=t.rings;t.rings=e}else if(o(t)){const e=t.paths;t.paths=e}else z(t)&&(t=R.fromExtent(t));return $(t.spatialReference,this.view.spatialReference).then((()=>{const e=Se(t),i=ee(e,t.spatialReference,this.view.spatialReference);return O(i),i}))}_onTileUpdate(e){const t=P(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}addOrUpdateGraphic(e,t,i){return this._addOrUpdateGraphic(e,t,i)}addGraphic(e){this._abortProcessingGraphic(e.uid);const t=q();this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};return this._addOrUpdateGraphic(e,"add",i).then((()=>{this._graphicIdToAbortController.delete(e.uid)})).catch((t=>{if(this._graphicIdToAbortController.delete(e.uid),!k(t))throw t}))}_addOrUpdateGraphic(e,t,i){const s=this._projectAndNormalizeGeometry(e),r=this._getSymbolResources(e,i);return C([s,r]).then((([s,r])=>"add"===t?this._addProjectedGraphic(e,r,s):this._updateGraphic(e,r,s,i)))}_addProjectedGraphic(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)}_updateGraphic(e,t,i,s){if(!this._graphicStore.has(e)||F(s))return w();const{oldBounds:r,newBounds:a}=this._graphicStore.update(e,t,i),o=0===U(r)&&0===x(r),n=0===U(a)&&0===x(a),h=o?[]:this._tileStore.boundsIntersections(r),d=n?[]:this._tileStore.boundsIntersections(a),c=Ie.acquire();for(const t of h)c.set(t.key,{addOrUpdate:null,remove:[this._displayIds.get(e.uid)]});for(const t of d){const i=this._getGraphicData(this._templateStore,t,e);if(c.has(t.key)){const e=c.get(t.key);e.remove.length=0,e.addOrUpdate=i}else c.set(t.key,{addOrUpdate:i,remove:null})}const l=[];return c.forEach(((e,t)=>{const i=this._processGraphics(e.addOrUpdate,s).then((i=>{this._patchTile(t,{type:"update",addOrUpdate:i,remove:e.remove,end:!0})}));l.push(i)})),Ie.release(c),C(l).then((()=>{}))}_addTile(e,t){const s=i();this.view.featuresTilingScheme.getTileBounds(s,e);const r=new ge(e,s,!0),a={type:"update",clear:!0,addOrUpdate:t,remove:[],end:!0};this._tiles.set(e,r),this.container.addChild(r),r.setData(a)}_addNewTile(e,t){const i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&B(e.geometry)&&this._wrapPoints(e,s)}const s=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(i).then((e=>{this._addTile(s,e),this._tileUpdateSet.delete(s),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(s),this.notifyChange("updating"),!k(e))throw e}))}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?ae:0))}_getGraphicsData(e,t,i){const s=P(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&B(t.geometry)&&this._wrapPoints(t,e)}return r.sort(((e,t)=>e.insertAfter-t.insertAfter)),r}_getGraphicData(e,t,i){const s=this._graphicStore.getGraphicData(e,t,i),r=[s],a=P(this.view.spatialReference);if(a){const e=Math.round((a.valid[1]-a.valid[0])/t.resolution);s.geometry&&B(s.geometry)&&this._wrapPoints(s,e)}return r}_wrapPoints(e,t){const i=e.geometry;512===t?i.x<20?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>492&&(e.geometry={points:[[i.x,i.y],[-t,0]]}):i.x<-20?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>532&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}async _processGraphics(e,t){if(!e||!e.length||!this._meshFactory)return null;const i=Ue.from(e),s=this._meshFactory;return await s.analyzeGraphics(i,await this._matcher,null,null,t),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(i)}_processAnalyzedGraphics(e){const t=this._meshFactory,i=t.createMeshData(e.getApproximateSize()),s=e.getCursor();for(;s.next();){const e=s.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),t.writeGraphic(i,s)}const r={};return i.encode(r,[]),_e.decode(r)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return o(t)?D:s(t)||z(t)?j:H}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}async _handleUpdateGraphic(e){let t=this._graphicIdToAbortController.get(e.uid);t&&(t.abort(),this._graphicIdToAbortController.delete(e.uid)),t=q(),this._graphicIdToAbortController.set(e.uid,t);try{await this.addOrUpdateGraphic(e,"update",{signal:t.signal}),this._graphicIdToAbortController.delete(e.uid)}catch{this._graphicIdToAbortController.delete(e.uid)}}};y([f({constructOnly:!0})],De.prototype,"requestUpdateCallback",void 0),y([f({constructOnly:!0})],De.prototype,"graphics",void 0),y([f()],De.prototype,"updating",null),y([f()],De.prototype,"view",void 0),y([f()],De.prototype,"updateRequested",void 0),De=y([b("esri.views.2d.layers.support.GraphicsView2D")],De);var je=De;export{je as t};
