import{m as e,r as s,p as a,y as r,dg as i,dS as l,q as t}from"../main.js";import{n}from"./sublayerUtils-be50c78c.js";const y={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let o=class extends(e(s)){constructor(){super(...arguments),this._scale=null,this.view=null}destroy(){this.layer=this.view=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>e.toExportImageJSON()));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&n(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(y[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){const e=this.visibleSublayers.filter((e=>null!=e.definitionExpression));return e.length?JSON.stringify(e.reduce(((e,s)=>(e[s.id]=s.definitionExpression,e)),{})):null}get scale(){return null!=this._scale?this._scale:this.view&&this.view.scale||0}set scale(e){this.view||(this._scale=e,this.notifyChange("scale"))}get version(){const e=this;e.layers,e.layerDefs,e.dynamicLayers,e.timeExtent;const s=e.layer;return s&&(s.dpi,s.imageFormat,s.imageTransparency,s.gdbVersion),(this._get("version")||0)+1}set version(e){this._set("version",e)}get visibleSublayers(){const e=[];if(!this.layer)return e;const s=this.layer.sublayers,a=s=>{const r=this.scale,i=0===r,l=0===s.minScale||r<=s.minScale,t=0===s.maxScale||r>=s.maxScale;s.visible&&(i||l&&t)&&(s.sublayers?s.sublayers.forEach(a):e.unshift(s))};s&&s.forEach(a);const r=this._get("visibleSublayers");return!r||r.length!==e.length||r.some(((s,a)=>e[a]!==s))?e:r}toJSON(){const e=this.layer;let s={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?s.dynamicLayers=this.dynamicLayers:s={...s,layers:this.layers,layerDefs:this.layerDefs},s}};a([r({readOnly:!0,dependsOn:["hasDynamicLayers","visibleSublayers"]})],o.prototype,"dynamicLayers",null),a([r({readOnly:!0,dependsOn:["visibleSublayers","layer.serviceSublayers","layer.capabilities"]})],o.prototype,"hasDynamicLayers",null),a([r()],o.prototype,"layer",null),a([r({readOnly:!0,dependsOn:["visibleSublayers"]})],o.prototype,"layers",null),a([r({readOnly:!0,dependsOn:["visibleSublayers"]})],o.prototype,"layerDefs",null),a([r({type:Number,dependsOn:["view.scale"]})],o.prototype,"scale",null),a([r(i)],o.prototype,"timeExtent",void 0),a([r({dependsOn:["layers","layerDefs","dynamicLayers","layer.dpi","layer.imageFormat","layer.imageTransparency","layer.gdbVersion","timeExtent"]})],o.prototype,"version",null),a([r({type:l})],o.prototype,"view",void 0),a([r({readOnly:!0,dependsOn:["layer.sublayers","scale"]})],o.prototype,"visibleSublayers",null),o=a([t("esri.layers.mixins.ExportImageParameters")],o);export{o as y};
