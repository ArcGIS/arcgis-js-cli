import{p as e,y as t,dg as i,q as r,bo as a,k as s,a as n,cY as o,a5 as p,i as l,dF as h,du as d,aT as u,dy as c,T as m,U as y,$ as g,bO as w,dG as x,d1 as v,Q as f,dH as b}from"../main.js";import"./featureConversionUtils-0e5f7c52.js";import"./centroid-aa1305d6.js";import"./FeatureSetReader-b7349ae0.js";import"./json-9a5f5790.js";import"./quantizationUtils-779d11a7.js";import"./quickselect-efd045df.js";import"./ComputedAttributeStorage-82041b67.js";import"./definitions-5e24d82a.js";import"./RenderingContext-81847018.js";import"./Utils-b46864a6.js";import"./CircularArray-e829d2b1.js";import"./visualVariablesUtils-a8352e1b.js";import{p as j}from"./pixelUtils-6e86d48c.js";import"./earcut-69661edf.js";import"./TurboLine-c366e7cd.js";import"./Rect-31175b04.js";import"./GeometryUtils-2b0c8e16.js";import"./BidiEngine-b37d0381.js";import"./VertexArrayObject-17b5c9bd.js";import"./ShaderCompiler-2335fa5a.js";import{r as V}from"./Container-c6c95dc1.js";import"./mat4f32-a7ddfa75.js";import"./WGLContainer-720c8185.js";import"./MaterialKey-a89f5ca3.js";import"./shapingUtils-e86a3b68.js";import"./WGLMeshFactory-05a88f56.js";import{t as _}from"./GraphicsView2D-64a51c26.js";import"./FeatureContainer-de88ad63.js";import"./VertexBuffer-06b50273.js";import"./TileContainer-59d09056.js";import"./MD5-f399cfb7.js";import"./graphicsUtils-f2509259.js";import{l as E,p as R}from"./LayerView2D-6e7585a5.js";import{h as C}from"./Bitmap-a30fe19d.js";import{d as D}from"./popupUtils-2a195f64.js";import{t as U}from"./BitmapContainer-9f88d8f9.js";import{w as I}from"./ExportStrategy-2371daad.js";const q=l=>{let h=class extends l{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)return a(new s("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));const{popupEnabled:r}=i,l=D(i,t);if(!r||!n(l))throw new s("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:r,popupTemplate:l});const h=await l.getRequiredFields(),d=new o;d.geometry=e,d.outFields=h,d.outSpatialReference=e.spatialReference;const u=this.view.resolution,c="2d"===this.view.type?new p(u,u,this.view.spatialReference):new p(.5*u,.5*u,this.view.spatialReference),{returnTopmostRaster:m,showNoDataRecords:y}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},g={returnDomainValues:!0,returnTopmostRaster:m,pixelSize:c,showNoDataRecords:y};return i.queryVisibleRasters(d,g).then((e=>e))}canResume(){var e;return!!super.canResume()&&!(null==(e=this.timeExtent)?void 0:e.isEmpty)}};return e([t()],h.prototype,"layer",void 0),e([t({dependsOn:["timeExtent"]})],h.prototype,"suspended",void 0),e([t(i)],h.prototype,"timeExtent",void 0),e([t()],h.prototype,"view",void 0),h=e([r("esri.views.layers.ImageryLayerView")],h),h},B=l.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let M=class extends(E(R)){constructor(){super(...arguments),this.container=new V,this._graphicsView=null,this.type="Graphics",this._graphics=new h,this._updateGraphics=d((async(e,t)=>{if(!e.stationary)return;const i=e.state,r=new u({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),a=e.state.size[0],s=e.state.size[1],n={};n.timeExtent=this.timeExtent,n.requestAsImageElement=!1,n.signal=t;const o=this._getVectorFieldExportParams({extent:r,width:a,height:s}),p=await this.layer.fetchImage(o.extent,o.width,o.height,n),l=this.layer.renderer;if("vector-field"===l.type){this._pixelData={extent:o.extent,pixelBlock:p.pixelData.pixelBlock};const t=await l.getGraphicsFromPixelData(p.pixelData,"vector-uv"===this.layer.rasterInfo.dataType);this._graphicsView.update(e),await c(0).then((()=>{this._graphics.set("items",t)}))}}))}get updating(){var e;return null==(e=this._graphicsView)?void 0:e.updating}update(e){this._updateGraphics(e).catch((e=>{m(e)||B.error(e)}))}hitTest(e,t){if(this.suspended)return y(null);const i=this.view.toMap(g(e,t));return y(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new _({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate()})}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}_getVectorFieldExportParams(e){var t,i;let{extent:r,width:a,height:s}=e;const n=this.layer,o=null==(t=n.fullExtent)?void 0:t.xmin,p=null==(i=n.fullExtent)?void 0:i.ymax;let l;"vector-field"===n.renderer.type&&(l=n.renderer.symbolTileSize),l=Math.max(l||0,30),a=Math.ceil(a*(1/l)),s=Math.ceil(s*(1/l));const h=(r.xmax-r.xmin)/a,d=(r.ymax-r.ymin)/s;return r.xmin=o+Math.floor((r.xmin-o)/h)*h,r.xmax=o+Math.ceil((r.xmax-o)/h)*h,r.ymin=p+Math.floor((r.ymin-p)/d)*d,r.ymax=p+Math.ceil((r.ymax-p)/d)*d,{extent:r,width:a,height:s}}};e([t()],M.prototype,"container",void 0),e([t()],M.prototype,"layer",void 0),e([t()],M.prototype,"timeExtent",void 0),e([t({dependsOn:["_graphicsView.updating"]})],M.prototype,"updating",null),e([t()],M.prototype,"_graphicsView",void 0),e([x({graphics:"Graphics"})],M.prototype,"type",void 0),M=e([r("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],M);var k=M;const S=l.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let T=class extends(E(R)){constructor(){super(...arguments),this.container=new V,this.type="Imagery",this._bitmapView=null}get updating(){var e;return null==(e=this.strategy)?void 0:e.updating}update(e){this.strategy.update(e).catch((e=>{m(e)||S.error(e)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e,t){if(this.suspended)return y(null);const i=this.view.toMap(g(e,t));return y(new w({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new U,this.strategy=new I({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}moveStart(){}viewChange(){}moveEnd(){}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.container.children;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),r=j(i,t);return r?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(e,t,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,r).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:r.signal}).then((t=>{const i=new C(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};e([t()],T.prototype,"container",void 0),e([t()],T.prototype,"layer",void 0),e([t()],T.prototype,"strategy",void 0),e([t()],T.prototype,"timeExtent",void 0),e([t({dependsOn:["strategy.updating"]})],T.prototype,"updating",null),e([x({imagery:"Imagery"})],T.prototype,"type",void 0),T=e([r("esri.views.2d.layers.imagery.ImageryView2D")],T);var F=T;let G=class extends(q(v(E(R)))){constructor(){super(...arguments),this._exportImageVersion=-1}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?y(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([f(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),b(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var i,r;"vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t||(null==(i=this.subview)||i.uninstall(this.container),null==(r=this.subview)||r.destroy(),this.subview="Imagery"===t?new F({layer:this.layer,view:this.view}):new k({layer:this.layer,view:this.view}),this.subview.attach(),this.subview.install(this.container)),this.requestUpdate()}};e([t({dependsOn:["updating"]})],G.prototype,"pixelData",null),e([t({readOnly:!0,dependsOn:["subview.updating"]})],G.prototype,"updating",null),e([t()],G.prototype,"subview",void 0),G=e([r("esri.views.2d.layers.ImageryLayerView2D")],G);var P=G;export default P;
