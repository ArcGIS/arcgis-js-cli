import{i as e,a5 as t,bX as i,al as s,bt as n,bY as o,bE as l,bZ as a,bo as r,k as c,b_ as u,v as h,T as p,bW as m,af as f,b$ as d,br as y,bq as x,c0 as v,c1 as T,c2 as g}from"../main.js";const R=e.getLogger("esri.layers.support.ElevationSampler");class w{queryElevation(e){return function(e,t){const i=E(e,t.spatialReference);if(!i)return null;switch(e.type){case"point":!function(e,t,i){e.z=i.elevationAt(t)||0}(e,i,t);break;case"polyline":!function(e,t,i){A.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let n=0;n<e.paths.length;n++){const o=e.paths[n],l=t.paths[n];for(let e=0;e<o.length;e++){const t=o[e],n=l[e];A.x=n[0],A.y=n[1];const a=i.elevationAt(A)||0;s&&(t[3]=t[2]),t[2]=a}}e.hasZ=!0}(e,i,t);break;case"multipoint":!function(e,t,i){A.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let n=0;n<e.points.length;n++){const o=e.points[n],l=t.points[n];A.x=l[0],A.y=l[1];const a=i.elevationAt(A)||0;s&&(o[3]=o[2]),o[2]=a}e.hasZ=!0}(e,i,t)}return e}(e.clone(),this)}on(){return I}projectIfRequired(e,t){return E(e,t)}}class _ extends w{constructor(e,t,s){super(),this.tile=e,this.noDataValue=s,this.extent=i(e.tile.extent,t.spatialReference);const n=l(t.spatialReference),o=t.lodAt(e.tile.level).resolution*n;this.demResolution={min:o,max:o}}get spatialReference(){return this.extent.spatialReference}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return a(this.extent,t)}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;if(!this.contains(e)){const t=this.extent,i=`${t.xmin}, ${t.ymin}, ${t.xmax}, ${t.ymax}`;R.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler extent (${i})`)}return this.tile.sample(t.x,t.y)}}class q extends w{constructor(e,t,n){let o;super(),"number"==typeof t?(this.noDataValue=t,o=null):(o=t,this.noDataValue=n),this.samplers=o?e.map((e=>new _(e,o,this.noDataValue))):e;const l=this.samplers[0];if(l){this.extent=l.extent.clone();const{min:e,max:t}=l.demResolution;this.demResolution={min:e,max:t};for(let e=1;e<this.samplers.length;e++){const t=this.samplers[e];this.extent.union(t.extent),this.demResolution.min=Math.min(this.demResolution.min,t.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,t.demResolution.max)}}else this.extent=i(s(),o.spatialReference),this.demResolution={min:0,max:0}}get spatialReference(){return this.extent.spatialReference}elevationAt(e){const t=this.projectIfRequired(e,this.spatialReference);if(!t)return null;for(const e of this.samplers)if(e.contains(t))return e.elevationAt(t);return R.warn("#elevationAt()",`Point used to sample elevation (${e.x}, ${e.y}) is outside of the sampler`),null}}function E(e,t){const i=e.spatialReference;return i.equals(t)?e:n(i,t)?o(e,t):(R.error(`Cannot project geometry spatial reference (wkid:${i.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),null)}const A=new t,I={remove(){}};class D{constructor(e,t){if(this.tile=e,!t)return void(this.samplerData=null);const i=this.tile.extent;this.samplerData={pixelData:t.values,width:t.width,height:t.height,safeWidth:.99999999*(t.width-1),noDataValue:t.noDataValue,dx:(t.width-1)/(i[2]-i[0]),dy:(t.width-1)/(i[3]-i[1]),x0:i[0],y1:i[3]}}sample(e,t){if(this.samplerData)return function(e,t,i){const{safeWidth:s,width:n,pixelData:o,noDataValue:l}=e,a=b(e.dy*(e.y1-i),0,s),r=b(e.dx*(t-e.x0),0,s),c=Math.floor(a),u=Math.floor(r),h=c*n+u,p=h+n,m=o[h],f=o[p],d=o[h+1],y=o[p+1];if(m!==l&&f!==l&&d!==l&&y!==l){const e=r-u,t=m+(d-m)*e;return t+(f+(y-f)*e-t)*(a-c)}}(this.samplerData,e,t)}}function b(e,t,i){return e<t?t:e>i?i:e}class C{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)return r(new c("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));const s=M.fromGeometry(t);let n=!1;i&&i.returnSampleInfo||(n=!0);const o={noDataValue:0,maximumAutoTileRequests:20,...i,returnSampleInfo:!0,demResolution:"auto"},l=await this.query(e[e.length-1],s,o),a=await this._queryAllContinue(e,l,o);return a.geometry=a.geometry.export(),n&&delete a.sampleInfo,a}async query(e,t,i){if(!e)return r(new c("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"));if(!t||!(t instanceof M)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)return r(new c("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation"));i={noDataValue:0,demResolution:"auto",minDemResolution:0,maximumAutoTileRequests:20,returnSampleInfo:!1,...i};const s=new S(e,t.spatialReference,i);return await e.load(i),this._createGeometryDescriptor(s,t),await this._selectTiles(s),await this._populateElevationTiles(s),this._sampleGeometryWithElevation(s),this._createQueryResult(s)}async createSampler(e,t,i){return e?t&&"extent"===t.type?(i={noDataValue:0,demResolution:"auto",maximumAutoTileRequests:20,returnSampleInfo:!1,...i},this._createSampler(e,t,i)):r(new c("elevation-query:invalid-extent","Invalid or undefined extent")):r(new c("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"))}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)return r(new c("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));if(!t||"extent"!==t.type)return r(new c("elevation-query:invalid-extent","Invalid or undefined extent"));const s={noDataValue:0,maximumAutoTileRequests:20,...i,returnSampleInfo:!0,demResolution:"auto"},n=await this._createSampler(e[e.length-1],t,s);return this._createSamplerAllContinue(e,t,n,s)}async _createSampler(e,t,i,s){await e.load();const l=t.spatialReference,a=e.tileInfo.spatialReference;if(!l.equals(a)){if(!n(l,a))return r(new c("elevation-query:invalid-extent",`Extent spatial reference (${l.wkid}) must be compatible with tile spatial reference (${a.wkid})`));t=o(t,a)}const u=new k(e,t,i,s);return await this._selectTiles(u),await this._populateElevationTiles(u),new q(u.elevationTiles,u.layer.tileInfo,u.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>u(e.extent))),o=await this._createSampler(e[e.length-1],t,s,n);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new q(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,i){const s=e.pop();if(t.geometry.coordinates.forEach(((e,i)=>{t.sampleInfo[i].demResolution>=0&&!t.sampleInfo[i].source&&(t.sampleInfo[i].source=s)})),!e.length)return t;const n=t.geometry.coordinates,o=[],l=[];for(let e=0;e<n.length;e++)t.sampleInfo[e].demResolution<0&&(o.push(n[e]),l.push(e));if(0===o.length)return t;const a=t.geometry.clone(o),r=await this.query(e[e.length-1],a,i);return l.forEach(((e,i)=>{n[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}_createQueryResult(e){let t;t=e.outSpatialReference.equals(e.geometry.spatialReference)?e.geometry:e.geometry.project(e.outSpatialReference);const i={geometry:t.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}_createGeometryDescriptor(e,t){let i;const s=e.layer.tileInfo.spatialReference;if(i=t instanceof M?t.project(s):o(t,s),!i)throw new c("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=M.fromGeometry(i)}async _selectTiles(e){const t=e.options.demResolution;if("geometry"===e.type&&this._preselectOutsideLayerExtent(e),"number"==typeof t)this._selectTilesClosestResolution(e);else if("finest-contiguous"===t)await this._selectTilesFinestContiguous(e);else{if("auto"!==t)throw new c("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${t}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e)}}_preselectOutsideLayerExtent(e){const t=new D(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/l(e.spatialReference);let s=e.lods[0],n=0;for(let t=1;t<e.lods.length;t++){const o=e.lods[t];Math.abs(o.resolution-i)<Math.abs(s.resolution-i)&&(s=o,n=t)}return n}async _selectTilesFinestContiguous(e){const t=V(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,t)}async _selectTilesFinestContiguousAt(e,t){const i=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const s=i.tilemapCache,n=e.getTilesToFetch();try{if(s)await h(n.map((t=>s.fetchAvailability(t.level,t.row,t.col,{signal:e.options.signal}))));else if(await this._populateElevationTiles(e),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new c("elevation-query:has-unavailable-tiles")}catch(i){if(p(i))throw i;await this._selectTilesFinestContiguousAt(e,t-1)}}async _populateElevationTiles(e){const t=e.getTilesToFetch(),i={},s=t.map((t=>e.layer.fetchTile(t.level,t.row,t.col,{noDataValue:e.options.noDataValue,signal:e.options.signal}).then((e=>i[t.id]=new D(t,e)))));await m(s),f(e.options.signal),e.populateElevationTiles(i)}async _selectTilesAuto(e){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const t=e.layer.tilemapCache;if(!t)return this._selectTilesAutoPrefetchUpsample(e);const i=e.getTilesToFetch(),n={},o=i.map((async i=>{const o={id:null,level:0,row:0,col:0,extent:s()},l=await d(t.fetchAvailabilityUpsample(i.level,i.row,i.col,o,{signal:e.options.signal}));if(!1===l.ok&&p(l.error))throw l.error;!0===l.ok&&(n[i.id]=o)}));await h(o),e.remapTiles(n)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{e.id in s?s[e.id]++:(s[e.id]=1,i++)},o=e=>{const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(o(s),t.upsampleTile(s)&&(l=!0),n(s))}),o),l););}_selectTilesAutoFinest(e){const t=V(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e){const t=e.layer.tileInfo;await this._populateElevationTiles(e);let i=!1;e.forEachTileToFetch(((e,s)=>{t.upsampleTile(e)?i=!0:s()})),i&&await this._selectTilesAutoPrefetchUpsample(e)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);void 0!==e?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=l(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;return s.elevationTile&&s.elevationTile!==e.outsideExtentTile&&(n=t.lodAt(s.elevationTile.tile.level).resolution*i),{demResolution:n}}))}}class M{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new M;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}project(e){if(this.spatialReference.equals(e))return this.clone();if(n(this.spatialReference,e)){const t=e.isWGS84?y:x,i=[0,0],s=this.coordinates.map((e=>{const s=this._cloneCoordinate(e);return t(s.x,s.y,i),s.x=i[0],s.y=i[1],s})),n=this.clone(s);return n.spatialReference=e,n}return null}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const i=new M;if(i.geometry=e,i.spatialReference=e.spatialReference,e instanceof M)i.coordinates=e.coordinates.map((e=>i._cloneCoordinate(e))),i._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case"point":{const s=e;e.hasM?i.coordinates=[{x:s.x,y:s.y,m:s.m}]:i.coordinates=[{x:s.x,y:s.y}],i._exporter=(i,s)=>e.hasM?new t(i[0].x,i[0].y,i[0].z,i[0].m,s):new t(i[0].x,i[0].y,i[0].z,s);break}case"multipoint":{const t=e;i.coordinates=t.points.map((t=>{if(e.hasM){const i=e.hasZ?3:2;return{x:t[0],y:t[1],m:t[i]}}return{x:t[0],y:t[1]}})),i._exporter=(t,i)=>e.hasM?new T({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new T(t.map((e=>[e.x,e.y,e.z])),i);break}case"polyline":{const t=[],s=[];let n=0;e.paths.forEach((i=>{s.push([n,n+i.length]),n+=i.length,t.push(...i.map((t=>{if(e.hasM){const i=e.hasZ?3:2;return{x:t[0],y:t[1],m:t[i]}}return{x:t[0],y:t[1]}})))})),i.coordinates=t,i._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),o=s.map((e=>n.slice(e[0],e[1])));return new v({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return i}}class F{constructor(e,t){this.layer=e,this.options=t}}class S extends F{constructor(e,t,i){super(e,i),this.type="geometry",this.outSpatialReference=t}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;i.elevationTile||!i.tile||e[s.id]||(e[s.id]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class k extends F{constructor(e,t,i,s){super(e,i),this.type="extent",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],o=n.resolution*t.size[0],l=n.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return s}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const n of e)i[n.id]?t&&t(n):(i[n.id]=n,s.push(n));const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++)if(g(n[s].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.layer.tileInfo,i=t.lods[e],s=this.extent,n=t.tileAt(i.level,s.xmin,s.ymin),o=i.resolution*t.size[0],l=i.resolution*t.size[1],a=Math.ceil((s.xmax-n.extent[0])/o),r=Math.ceil((s.ymax-n.extent[1])/l);for(let e=0;e<r;e++)for(let i=0;i<a;i++){const s={id:null,level:n.level,row:n.row-e,col:n.col+i};t.updateTileInfo(s),this._tileIsMasked(s)||this.candidateTiles.push(s)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>g(t,e.extent)))}}function V(e,t){let i=e.lods.length-1;if(t>0){const s=e.lods.findIndex((e=>e.resolution<t));0===s?i=0:s>0&&(i=s-1)}return i}export default C;export{C as ElevationQuery,M as GeometryDescriptor,V as getFinestLodIndex};
