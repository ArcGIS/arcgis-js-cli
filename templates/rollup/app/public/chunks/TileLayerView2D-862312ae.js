import{p as e,y as t,q as i,bo as s,k as a,bW as r,a as l,i as n,d1 as o,d2 as h,d3 as c,d4 as u,t as p,T as m,d as f}from"../main.js";import"./featureConversionUtils-0e5f7c52.js";import"./definitions-5e24d82a.js";import"./RenderingContext-81847018.js";import"./Utils-b46864a6.js";import"./earcut-69661edf.js";import"./GeometryUtils-2b0c8e16.js";import"./VertexArrayObject-17b5c9bd.js";import"./ShaderCompiler-2335fa5a.js";import"./Container-c6c95dc1.js";import"./mat4f32-a7ddfa75.js";import"./WGLContainer-720c8185.js";import"./MaterialKey-a89f5ca3.js";import"./TileContainer-59d09056.js";import{l as d,p as y}from"./LayerView2D-6e7585a5.js";import{n as g}from"./clickToleranceUtils-c77be34a.js";import{a as w}from"./drapedUtils-c5c5241c.js";import"./Bitmap-a30fe19d.js";import"./BitmapTileContainer-85f286ed.js";import{i as _}from"./BitmapTileLayerView2D-91707130.js";const v=n=>{let o=class extends n{async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)return s(new a("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));if("tile"!==i.type)return s(new a("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:i.type}));const n=this.get("view.scale"),o=i.allSublayers.toArray().filter((e=>{const t=0===e.minScale||n<=e.minScale,i=0===e.maxScale||n>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&t&&i}));return r(o.map((async i=>{const s=i.createQuery(),a=l(t)?t.event:null,r=g({renderer:i.renderer,event:a});return s.geometry=this.createFetchPopupFeaturesQueryGeometry(e,r),s.outFields=await i.popupTemplate.getRequiredFields(),(await i.queryFeatures(s)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([t()],o.prototype,"layer",void 0),o=e([i("esri.layers.mixins.TileLayerView")],o),o},I=n.getLogger("esri.views.2d.layers.TileLayerView2D"),T=[0,0];let V=class extends(v(o(_(d(y))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}initialize(){const e=this.layer.tileInfo,t=e&&e.spatialReference;let i;t||(i=new a("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),t.equals(this.view.spatialReference)||(i=new a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.refresh()})),i&&this.addResolvingPromise(s(i))}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new h(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new c({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new u({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return w(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"))}isUpdating(){var e;return(null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(T,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,s=!p(t)&&t.signal;if(!i)try{return await this._fetchImage(e,s)}catch(e){if(!m(e)&&!this.resampling)return this._createBlankImage();throw e}const a=new f(0,0,0,0);let r;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:s}),a.level!==e.level&&!this.resampling)return this._createBlankImage();r=await this._fetchImage(a,s)}catch(t){if(m(t))throw t;r=await this._fetchImage(e,s)}const{level:l,row:n,col:o}=a;return this.resampling&&l!==e.level?this._resampleImage(r,l,n,o,e.level,e.row,e.col):r}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(e){m(e)||I.error(e)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{timestamp:this.refreshTimestamp,signal:t})}_resampleImage(e,t,i,s,a,r,l){const n=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t),h=this._tileInfoView.getTileResolution(a);let c=this._tileInfoView.getLODInfoAt(a);const u=c.getXForColumn(l),p=c.getYForRow(r);c=this._tileInfoView.getLODInfoAt(t);const m=c.getXForColumn(s),f=c.getYForRow(i),d=Math.round((u-m)/o),y=Math.round(-(p-f)/o),g=Math.round(n[0]*(h/o)),w=Math.round(n[1]*(h/o)),_=this._createBlankImage();return _.getContext("2d").drawImage(e,d,y,g,w,0,0,n[0],n[1]),_}_createBlankImage(){const e=this._tileInfoView.tileInfo.size,t=document.createElement("canvas");return[t.width,t.height]=e,t}};e([t({dependsOn:["layer.resampling?"]})],V.prototype,"resampling",null),V=e([i("esri.views.2d.layers.TileLayerView2D")],V);var b=V;export default b;
