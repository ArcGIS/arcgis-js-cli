import{i as e,p as t,y as i,aT as s,ft as r,aB as n,cK as a,cI as o,q as l,fP as u,aF as c,L as h,a as f,a5 as d,cf as p,d5 as m,k as y,b0 as g,A as x,v as I,U as w,aG as v,B as b,cA as T,bW as R,C as S,c4 as C,eR as _,eX as M,eY as k,eZ as F,cE as P,cF as D,cG as O,cJ as B,cu as N,f0 as z,eS as L,dG as H,fz as J,dB as A,cz as E}from"../main.js";import{n as j}from"./serviceTileInfoProperty-d5279f88.js";import{L as U}from"./TilemapCache-461e4d63.js";import"./ItemCache-710ba6c9.js";import"./LercCodec-6bf6a7c3.js";import{c as q,U as W,A as G,o as $,r as V,m as Y,u as X}from"./pixelUtils-6e86d48c.js";import{R as K,U as Z,r as Q,a as ee,I as te,b as ie,y as se,p as re,S as ne,m as ae,w as oe}from"./RasterSymbolizer-b4394874.js";import{b as le,h as ue,w as ce,i as he,m as fe,x as de,p as pe,y as me,M as ye,c as ge,e as xe}from"./RawBlockCache-a2a1e5e2.js";import{a as Ie,o as we,x as ve,T as be,y as Te,f as Re,u as Se,l as Ce}from"./rasterRendererHelper-ea082e98.js";const _e=e.getLogger("esri.layers.mixins.ImageryTileMixin"),Me=e=>{let d=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",u(e,_e))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let s;this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:n}=this;return s=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),s}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=c(e);return a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,s={}){if(s.requestAsImageElement){const r=this.getTileUrl(e,t,i);return h(r,{responseType:"image",query:{sliceId:this._sliceId,_ts:s.timestamp},signal:s.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;s={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...s}}return"raster-shaded-relief"===this.renderer.type&&(s={buffer:{cols:1,rows:1},...s}),this.raster.fetchTile(e,t,i,s)}async fetchPixels(e,t,i,s){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;s={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...s}}return this.raster.fetchPixels(e,t,i,s)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new Re;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=ve(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(f(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new Ie({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=be(e)),this.renderer||(this.renderer=Te(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new K({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||_e.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return t([i()],d.prototype,"_cachedRendererJson",void 0),t([i()],d.prototype,"_sliceId",void 0),t([i()],d.prototype,"_compatibleFullExtent",void 0),t([i()],d.prototype,"_rasterJobHandler",void 0),t([i()],d.prototype,"bandIds",void 0),t([i()],d.prototype,"copyright",void 0),t([i({type:s}),r("rasterInfo.extent")],d.prototype,"fullExtent",void 0),t([i()],d.prototype,"interpolation",void 0),t([i({type:[Ie]})],d.prototype,"multidimensionalDefinition",null),t([i()],d.prototype,"raster",void 0),t([i({readOnly:!0}),r("raster.rasterInfo")],d.prototype,"rasterInfo",void 0),t([i()],d.prototype,"sourceJSON",void 0),t([i({type:n}),r("rasterInfo.spatialReference")],d.prototype,"spatialReference",void 0),t([i({type:a,dependsOn:["rasterInfo"]}),r("rasterInfo.storageInfo.tileInfo")],d.prototype,"tileInfo",void 0),t([i(o)],d.prototype,"url",null),t([i({types:we})],d.prototype,"renderer",null),t([i()],d.prototype,"symbolizer",void 0),d=t([l("esri.layers.ImageryTileMixin")],d),d};let ke=class extends p{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};t([i({type:Number,json:{write:!0}})],ke.prototype,"blockWidth",void 0),t([i({type:Number,json:{write:!0}})],ke.prototype,"blockHeight",void 0),t([i({type:String,json:{write:!0}})],ke.prototype,"compression",void 0),t([i({type:d,json:{write:!0}})],ke.prototype,"origin",void 0),t([i({type:Number,json:{write:!0}})],ke.prototype,"firstPyramidLevel",void 0),t([i({type:Number,json:{write:!0}})],ke.prototype,"maximumPyramidLevel",void 0),t([i()],ke.prototype,"pyramidScalingFactor",void 0),t([i({type:Number,json:{write:!0}})],ke.prototype,"pyramidBlockWidth",void 0),t([i({type:Number,json:{write:!0}})],ke.prototype,"pyramidBlockHeight",void 0),t([i({type:Boolean,json:{write:!0}})],ke.prototype,"isVirtualTileInfo",void 0),t([i({json:{write:!0}})],ke.prototype,"tileInfo",void 0),t([i()],ke.prototype,"blockBoundary",void 0),ke=t([l("esri.layers.support.RasterStorageInfo")],ke);var Fe=ke;let Pe=class extends(m(p)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=le();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:a.create(),...e.ioConfig}}),e}set url(t){this._set("url",u(t,e.getLogger(this.declaredClass)))}async open(e){throw new y("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,s={}){var r;const{tileInfo:n}=s,a=n.lodAt(e),o=new d({x:a.resolution,y:a.resolution,spatialReference:n.spatialReference}),l=this.getTileExtent(o,t,i,n);return(null==(r=s.multidimensionalDefinition)?void 0:r.length)&&f(this.rasterInfo.multidimensionalInfo)&&null==s.sliceId&&(s={...s,sliceId:this.getSliceIndex(s.multidimensionalDefinition)||0}),this.fetchPixels(l,n.size[0],n.size[1],s)}async identify(e,t={}){const{spatialReference:i,extent:s}=this.rasterInfo,{datumTransformation:r}=t,n=ue(e,i,r);if(!s.intersects(n))return{location:n,value:null};let a=0;if(t.srcResolution)a=ce(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:n,value:null};const o=this.identifyPixelLocation(n,a,null);if(null===o)return{location:n,value:null};const{row:l,col:u,rowOffset:c,colOffset:h}=o,d=he(this.url,t.sliceId),p=`${a}/${l}/${u}`;let m=fe(d,null,p);f(m)||(m=this.fetchRawTile(a,l,u,t),de(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:n,value:null};const g=c*this.rasterInfo.storageInfo.blockHeight+h;return{location:n,value:!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,pyramidLevel:a}}async fetchPixels(e,t,i,s={}){const r=e.clone().normalize();e=r[0];const n=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(n),{datumTransformation:o}=s,l=new d({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=s.srcResolution||(a?pe(l,n,e,o):l);if(!u)return null;const{pyramidLevel:c,pyramidResolution:h,excessiveReading:f}=ce(u,this.rasterInfo,this.ioConfig.sampling);if(f)return null;const p=this.rasterInfo.storageInfo;let m=a?me(e,n,o):e;const y=g(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const x={x:Math.floor((m.xmin-p.origin.x)/h.x+.1),y:Math.floor((p.origin.y-m.ymax)/h.y+.1)},I=Math.ceil((m.xmax-m.xmin)/h.x-.1),w=Math.ceil((m.ymax-m.ymin)/h.y-.1);if(I/t>8||w/i>8)return null;const v=await this.fetchRawPixels(c,x,{width:I,height:w},s);if(!v)return null;const b=c>0?p.pyramidBlockWidth:p.blockWidth,T=c>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===v.pixelBlocks.length&&b===t&&T===i&&u.x===l.x&&u.y===l.y)return{extent:e,srcExtent:m,pixelBlock:v.pixelBlocks[0],transformGrid:null};const R=ye(e,v.extent,l,o,y);let S;const C=!s.requestRawData,_={rows:R.spacing[0],cols:R.spacing[1]},{pixelBlocks:M,mosaicSize:k,isPartiallyFilled:F}=v;if(this.rasterJobHandler)S=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:M,srcMosaicSize:k,destDimension:C?{width:t,height:i}:null,coefs:C?R.coefficients:null,sampleSpacing:C?_:null,interpolation:s.interpolation},s);else{const e=q(M,k);S=C?W(e,{width:t,height:i},R.coefficients,_,s.interpolation):e}return{srcExtent:m,pixelBlock:S,transformGrid:R,extent:e,isPartiallyFilled:F}}async fetchRawPixels(e,t,i,r){const{origin:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,l=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:u,y:c}=t,{width:h,height:f}=i;r.buffer&&(u-=r.buffer.cols,c-=r.buffer.rows,h+=2*r.buffer.cols,f+=2*r.buffer.rows);const d=Math.floor(u/o),p=Math.floor(c/l),m=Math.floor((u+h-1)/o),y=Math.floor((c+f-1)/l),g=a[e];if(!g)return null;const{minRow:w,minCol:v,maxCol:b,maxRow:T}=g;if(y<w||m<v||p>T||d>b)return null;const R=[];let S,C=!1;for(let t=p;t<=y;t++)for(let i=d;i<=m;i++)t>=w&&i>=v&&T>=t&&b>=i?(S=this._fetchRawTile(e,t,i,r),this.ioConfig.allowPartialFill&&(S=x((e=>{S.then((t=>e(t))).catch((()=>{C=!0,e(null)}))}))),R.push(S)):R.push(null);if(0===R.length)return null;const _=await I(R),M={height:(y-p+1)*o,width:(m-d+1)*l},{nativePixelSize:k,spatialReference:F}=this.rasterInfo,P=k.x*Math.pow(2,e),D=k.y*Math.pow(2,e);return{extent:new s({xmin:n.x+d*o*P,xmax:n.x+(m+1)*o*P,ymin:n.y-(y+1)*l*D,ymax:n.y-p*l*D,spatialReference:F}),pixelBlocks:_,mosaicSize:M,isPartiallyFilled:C}}async fetchRawTile(e,t,i,s){throw new y("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return me(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Z(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var s,r;const{customFetchParameters:n}=this.ioConfig,{range:a,query:o,headers:l}=t;i=null!=(s=null!=(r=i)?r:t.retryCount)?s:this.ioConfig.retryCount;const u=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await h(e,{...t,query:{...o,...n},headers:{...l,...u}})}catch(s){if(i>0)return i--,this.request(e,t,i);throw s}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!f(t)||!(null==e?void 0:e.length))return null;let i=0;const s=e[0].variableName;for(let r=0;r<t.variables.length;r++){const n=t.variables[r],a=n.dimensions;if(n.name!==s){i+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const s=e.filter((e=>e.dimensionName===a[t].name))[0];if(null==s)return null;const r=Array.isArray(s.values[0])?s.values[0][0]:s.values[0],n=this._getIndexFromDimensions(r,a[t]);if(-1===n)return null;o.shift(),i+=t===l-1?n:n*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:s}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let o=Math.max(s.x,s.y),l=1/.0254*96*o;for(let e=0;e<=n;e++)r.push({level:n-e,resolution:o,scale:l}),o*=2,l*=2;const u=new d({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new a({origin:u,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,s){const{width:r,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=e,u=new d({x:a.xmin,y:a.ymax,spatialReference:l});null==s&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const c=this._computeBlockBoundary(a,o,s,512,512);e.storageInfo=new Fe({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:s,pixelSize:r,extent:n}=this.rasterInfo,{blockWidth:a,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:u,origin:c}=this.rasterInfo.storageInfo,h=ue(e,s,i);if(!n.intersects(h))return null;if(t<0||t>l)return null;const f=Math.pow(u,t),d=f*r.x,p=f*r.y,m=(c.y-h.y)/p/o,y=(h.x-c.x)/d/a,g=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),x=Math.min(a-1,Math.floor((y-Math.floor(y))*a));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:g,colOffset:x,srcLocation:h}}getTileExtent(e,t,i,r){const{origin:n,spatialReference:a}=r,o=r.size[0],l=r.size[1],u=n.x+i*o*e.x,c=u+o*e.x,h=n.y-t*l*e.y,f=h-l*e.y;return new s({xmin:u,xmax:c,ymin:f,ymax:h,spatialReference:a})}_computeBlockBoundary(e,t,i,s,r){let{x:n,y:a}=t;const o=e.xmin,l=e.ymax,u=[{minCol:Math.floor((e.xmin-o+.1*n)/s/n),maxCol:Math.floor((e.xmax-o-.1*n)/s/n),minRow:Math.floor((l-e.ymax+.1*a)/r/a),maxRow:Math.floor((l-e.ymin-.1*a)/r/a)}];if(i>0)for(let t=0;t<i;t++)n*=2,a*=2,u.push({minCol:Math.floor((e.xmin-o+.1*n)/s/n),maxCol:Math.floor((e.xmax-o-.1*n)/s/n),minRow:Math.floor((l-e.ymax+.1*a)/r/n),maxRow:Math.floor((l-e.ymin-.1*a)/r/n)});return u}_fetchRawTile(e,t,i,s){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return w(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=r;if(t<n||i<a||t>l||i>o)return w(null);const u=he(this.url,s.sliceId),c=`${e}/${t}/${i}`;let h=fe(u,s.registryId,c);if(!f(h)){const r=v();h=this.fetchRawTile(e,t,i,{...s,signal:r.signal}),de(u,s.registryId,c,h,r),h.catch((()=>{ge(u,s.registryId,c)}))}return s.signal&&b(s,(()=>{xe(u,s.registryId,c)})),h}_getIndexFromDimensions(e,t){const{extent:i,interval:s,unit:r,values:n}=t;if(null==n?void 0:n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>i[1])return-1;const a=i[0];let o=-1;if("ISO8601"===r){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/s);break;case"minutes":o=Math.round((e-a)/6e4/s);break;case"hours":o=Math.round((e-a)/36e5/s);break;case"days":o=Math.round((e-a)/864e5/s);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/s);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/s)}return o}return Math.round((e-a)/s)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:s,values:r}=e;let n=(null==r?void 0:r.length)||0;if(n)return n;const a=t[0];if(0===n&&"ISO8601"===s){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/i);break;case"hours":n=Math.round((t[1]-t[0])/36e5/i);break;case"days":n=Math.round((t[1]-t[0])/864e5/i);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return n}return Math.round((t[1]-t[0])/i)}};t([i(o)],Pe.prototype,"url",null),t([i({type:String,json:{write:!0}})],Pe.prototype,"datasetName",void 0),t([i({type:String,json:{write:!0}})],Pe.prototype,"datasetFormat",void 0),t([i()],Pe.prototype,"rasterInfo",void 0),t([i()],Pe.prototype,"ioConfig",void 0),t([i()],Pe.prototype,"sourceJSON",void 0),Pe=t([l("esri.layers.support.rasterDatasets.BaseRaster")],Pe);var De=Pe;class Oe{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=t.getUint32(4,!0),r=t.getUint16(8,!0),n=t.getUint16(10,!0),a={version:i,recordCount:s,headerByteCount:r,recordByteCount:n};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Q(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<s&&e.byteLength-o>n;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push(Q(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const s=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(s.substring(0,4),10),parseInt(s.substring(4,6),10)-1,parseInt(s.substring(6,8),10)))}o+=t.length})),u.push(i)):o+=n}}const h=function(e){const t=e.fields,i=e.records,s=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),n=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[s]=o++,l=1;l<n.length;l++)t[n[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}({fields:l,records:u});return{header:a,fields:l,records:u,recordSet:h}}}const Be=new Map;Be.set("int16","esriFieldTypeSmallInteger"),Be.set("int32","esriFieldTypeInteger"),Be.set("int64","esriFieldTypeInteger"),Be.set("float32","esriFieldTypeSingle"),Be.set("float64","esriFieldTypeDouble"),Be.set("text","esriFieldTypeString");let Ne=class extends De{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new y("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(t);if("thematic"===s.dataType){const e=await this._fetchAuxiliaryInformation();s.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,s={}){const r=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(r<0)return null;const n=this._buildCacheFilePath(r,t,i,s.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),o=await this.request(n,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!o)return null;const l=new Uint8Array(o.data),u=this._getTileEndAndContentType(l,a);if(0===u.recordSize)return null;const c=await this.request(n,{range:{from:u.position,to:u.position+u.recordSize},responseType:"array-buffer",signal:s.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:o,colormap:l,blockWidth:u,blockHeight:c,firstPyramidLevel:h,maximumPyramidLevel:f}=e,p=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),m=new n(e.extent.spatialReference||e.geodataXform.spatialReference),y=new s({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m}),g=new d({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),x=null!=(t=e.properties)?t:{},I=e.format.toLowerCase().replace("cache/",""),w=new d(e.origin.x,e.origin.y,m);let v,b,T,R;if(l&&l.colors)for(v=[],b=0;b<l.colors.length;b++)T=l.colors[b],R=l.values?l.values[b]:b,v.push([R,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const S=e.LODInfos,C=[];for(b=0;b<S.levels.length;b++)C.push({level:S.levels[b],resolution:S.resolutions[b],scale:96/.0254*S.resolutions[b]});const _=new a({dpi:96,lods:C,format:I,origin:w,size:[u,c],spatialReference:m}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},k=Math.round((y.xmax-y.xmin)/g.x),F=Math.round((y.ymax-y.ymin)/g.y),P=[{maxCol:Math.ceil(k/u)-1,maxRow:Math.ceil(F/c)-1,minCol:0,minRow:0}];let D=2;if(f>0)for(b=0;b<f;b++)P.push({maxCol:Math.ceil(k/D/u)-1,maxRow:Math.ceil(F/D/c)-1,minCol:0,minRow:0}),D*=2;const O=e.mdInfo;return{storageInfo:M,rasterInfo:new ee({width:k,height:F,pixelType:i,bandCount:r,extent:y,spatialReference:m,pixelSize:g,keyProperties:x,statistics:p,histograms:o,multidimensionalInfo:O,colormap:v,storageInfo:new Fe({blockWidth:u,blockHeight:c,pyramidBlockWidth:u,pyramidBlockHeight:c,origin:w,tileInfo:_,firstPyramidLevel:h,maximumPyramidLevel:f,blockBoundary:P})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),s=await I([t,i]);let r;if(s[0]){let e=s[0].fields;const t=s[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":Be.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&s[1]&&(r=Oe.parse(s[1]).recordSet),T.fromJSON(r)}_buildCacheFilePath(e,t,i,s){const r=this.storageInfo.packetSize,n=Math.floor(t/r)*r,a=Math.floor(i/r)*r,o="R"+this._toHexString4(n)+"C"+this._toHexString4(a);let l="L";l+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,c=null==s?void 0:s[0];if(!f(u)||!c)return`${this.url}/_alllayers/${l}/${o}.bundle`;let h=u.variables.filter((e=>e.name===c.variableName))[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const d=4-h.length;for(let e=0;e<d;e++)h="0"+h;return h="S"+h,`${this.url}/_alllayers/${c.variableName}/${h}/${l}/${o}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,s=i*(e%i)+t%i;if(s<0)throw"Invalid level / row / col";return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let s,r=0;for(s=0;s<5;s++)r|=(255&i[s])<<8*s;const n=0xffffffffff&r;for(r=0,s=5;s<8;s++)r|=(255&i[s])<<8*(s-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};t([i({readOnly:!0})],Ne.prototype,"storageInfo",void 0),t([i({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),Ne=t([l("esri.layers.support.rasterDatasets.CloudRaster")],Ne);var ze=Ne;let Le=class extends De{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:r,histograms:a,name:o,keyProperties:l,nativeExtent:u,transform:c}=this.data,{width:h,height:f,pixelType:d}=i,p=this.data.extent||new s({xmin:-.5,ymin:.5,xmax:h-.5,ymax:f-.5,spatialReference:new n({wkid:3857})}),m=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,y={x:p.width/h,y:p.height/f},g=new ee({width:h,height:f,pixelType:d,extent:p,nativeExtent:u,transform:c,pixelSize:y,spatialReference:p.spatialReference,bandCount:3,keyProperties:l||{},statistics:r,isPseudoSpatialReference:m,histograms:a});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(e,t,i,s={}){const r=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return w(r)}async _buildInMemoryRaster(e,t,i){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:s},i):w(G(e,t,s)),n=f(this.rasterInfo.statistics),a=f(this.rasterInfo.histograms),o=n&&a?w({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):w($(e)),l=await R([r,o]);if(!l[0].value&&l[1].value)throw new y("inmemory-raster:open","failed to build in memory raster");var u,c;this._pixelBlockTiles=l[0].value,n||(this.rasterInfo.statistics=null==(u=l[1].value)?void 0:u.statistics),a&&(this.rasterInfo.histograms=null==(c=l[1].value)?void 0:c.histograms)}};t([i({type:String,json:{write:!0}})],Le.prototype,"datasetFormat",void 0),t([i()],Le.prototype,"data",void 0),Le=t([l("esri.layers.support.rasterDatasets.InMemoryRaster")],Le);var He=Le;function Je(e,t,i){const{x:s,y:r}=t;if(i<2)return{x:e[0]+s*e[2]+r*e[4],y:e[1]+s*e[3]+r*e[5]};if(2===i){const t=s*s,i=r*r,n=s*r;return{x:e[0]+s*e[2]+r*e[4]+t*e[6]+n*e[8]+i*e[10],y:e[1]+s*e[3]+r*e[5]+t*e[7]+n*e[9]+i*e[11]}}const n=s*s,a=r*r,o=s*r,l=n*s,u=n*r,c=s*a,h=r*a;return{x:e[0]+s*e[2]+r*e[4]+n*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+h*e[18],y:e[1]+s*e[3]+r*e[5]+n*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+h*e[19]}}function Ae(e,t,i){const{xmin:r,ymin:n,xmax:a,ymax:o,spatialReference:l}=t;let u=[];if(i<2)u.push({x:r,y:o}),u.push({x:a,y:o}),u.push({x:r,y:n}),u.push({x:a,y:n});else{let e=10;for(let t=0;t<e;t++)u.push({x:r,y:n+(o-n)*t/(e-1)}),u.push({x:a,y:n+(o-n)*t/(e-1)});e=8;for(let t=1;t<=e;t++)u.push({x:r+(a-r)*t/e,y:n}),u.push({x:r+(a-r)*t/e,y:o})}u=u.map((t=>Je(e,t,i)));const c=u.map((e=>e.x)),h=u.map((e=>e.y));return new s({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,h),ymax:Math.max.apply(null,h),spatialReference:l})}let Ee=class extends p{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,s,r,n,a]=e,o=s*a-n*r,l=n*r-s*a;return[(n*i-t*a)/o,(s*i-t*r)/l,a/o,r/l,-n/o,-s/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}forwardTransform(e){if("point"===e.type){const t=Je(this.forwardCoefficients,e,this.polynomialOrder);return new d({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Ae(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=Je(this.inverseCoefficients,e,this.polynomialOrder);return new d({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Ae(this.inverseCoefficients,e,this.polynomialOrder)}};t([i({json:{write:!0}})],Ee.prototype,"polynomialOrder",void 0),t([i({json:{write:!0}})],Ee.prototype,"forwardCoefficients",void 0),t([i({dependsOn:["forwardCoefficients"],json:{write:!0}})],Ee.prototype,"inverseCoefficients",null),Ee=t([l("esri.layers.support.rasterTransforms.PolynomialTransform")],Ee);var je=Ee;function Ue(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const r=Ue(e,i);for(let e=0;e<r.length;e++)Ue(r[e],t).forEach((e=>s.push(e)));return s}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let e=0;e<r.length;e++)s.push(r[e]||r.item[e]);return s}function qe(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=Ue(e,i);return s.length>0?t?qe(s[0],t):s[0]:null}function We(e,t=null){const i=t?qe(e,t):e;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function Ge(e,t){return function(e,t){const i=Ue(e,t),s=[];let r;for(let e=0;e<i.length;e++)r=i[e].textContent||i[e].nodeValue,r&&(r=r.trim(),""!==r&&s.push(r));return s}(e,t).map((e=>Number(e)))}function $e(e,t){const i=We(e,t);return Number(i)}function Ve(e,t){var i;const s=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),r=t.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===r}function Ye(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function Xe(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new n({wkid:t});const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),s=i[i.length-1].split(",");return"EPSG"!==s[0]||(t=Number(s[1]),isNaN(t)||0===t)?new n({wkt:e}):new n({wkid:t})}function Ke(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Ve(e,"SRS")){if(!i.spatialReference){const t=We(e);i.spatialReference=Xe(t)}}else if(Ve(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:s}=function(e){var t;const i=qe(e,"GeodataXform"),s=Xe($e(i,"SpatialReference/WKID")||We(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:s,transform:null};const r=null!=(t=$e(i,"PolynomialOrder"))?t:1,n=Ge(i,"CoeffX/Double"),a=Ge(i,"CoeffY/Double"),o=Ge(i,"InverseCoeffX/Double"),l=Ge(i,"InverseCoeffY/Double"),u=Ye(n,a),c=Ye(o,l);return{spatialReference:s,transform:new je({polynomialOrder:r,forwardCoefficients:u,inverseCoefficients:c})}}(e);i.transform=s,i.spatialReference||(i.spatialReference=t)}else Ue(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=We(e)));else if(Ve(e,"PAMRasterBand")){const t=function(e){var t;const i=$e(e,"NoDataValue"),s=qe(e,"Histograms/HistItem"),r=$e(s,"HistMin"),n=$e(s,"HistMax"),a=$e(s,"BucketCount"),o=null==(t=We(s,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,u,c,h;Ue(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":h=i}}));const f=$e(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:(null==o?void 0:o.length)&&null!=l&&null!=u?{min:r,max:n,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const s=i.rasterBands;if(s){const e=!!s[0].statistics;i.statistics=e?s.map((e=>e.statistics)):null;const t=!!s[0].histogram;i.histograms=t?s.map((e=>e.histogram)):null}return i}let Ze=class extends De{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:r,histograms:a,transform:o}=await this._fetchAuxiliaryData(e);const l=!i;l&&(i=new n({wkid:3857})),(null==a?void 0:a.length)&&null==r&&(r=V(a));const{width:u,height:c}=t;let h=new s({xmin:-.5,ymin:.5-c,xmax:u-.5,ymax:.5,spatialReference:i});const f=o?o.forwardTransform(h):h;let d=!0;if(o){const e=o.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(o=null,h=f)}const p=new He({data:{extent:f,nativeExtent:h,transform:o,pixelBlock:t,statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:l}});await p.open(),this._set("rasterInfo",p.rasterInfo),this._inMemoryRaster=p}fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=te(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new y("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const s=g(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],n=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=r.indexOf(o)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:s}),u=await R([n,l]);if(null==s?void 0:s.aborted)throw S();const c=Ke(null==(i=u[0].value)?void 0:i.data);if(!c.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;c.transform=6===(null==e?void 0:e.length)?new je({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};t([i({type:String,json:{write:!0}})],Ze.prototype,"datasetFormat",void 0),Ze=t([l("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ze);var Qe=Ze;let et=class extends De{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;this.sourceJSON=s;if(this.tileType=s.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(s.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===s.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!s)throw new y("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new y("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=s.name.slice(s.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!f(r))throw new y("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?j(s.tileInfo,s):a.fromJSON(s.tileInfo),{extent:t,pixelSize:i}=r,n=.5/r.width*i.x;let o,l;const u=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==s.maxScale&&("Raster"===this.tileType?(o=e.lods.filter((e=>e.resolution===i.x))[0],o||(o=e.lods[e.lods.length-1])):(o=e.lods.filter((e=>Math.abs(e.scale-s.maxScale)<n))[0],o||(o=e.lods.filter((e=>e.scale>s.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=o.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),o||(o=u);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==s.minScale&&"Elevation"===this.tileType&&(l=e.lods.filter((e=>Math.abs(e.scale-s.minScale)<n))[0],this._levelOffset=l.level-c.level),l||(l=c);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>n||!e.lods.some((e=>Math.abs(e.resolution-h)<n)))&&(i.x=i.y=o.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const f=o.level-l.level,[d,p]=e.size,m=e.origin;let{x:y,y:g}=i;const x=[{minCol:Math.floor((t.xmin-m.x+.1*y)/d/y),maxCol:Math.floor((t.xmax-m.x-.1*y)/d/y),minRow:Math.floor((m.y-t.ymax+.1*g)/p/g),maxRow:Math.floor((m.y-t.ymin-.1*g)/p/g)}];if(f>0)for(let e=0;e<f;e++)y*=2,g*=2,x.push({minCol:Math.floor((t.xmin-m.x+.1*y)/d/y),maxCol:Math.floor((t.xmax-m.x-.1*y)/d/y),minRow:Math.floor((m.y-t.ymax+.1*g)/p/y),maxRow:Math.floor((m.y-t.ymin-.1*g)/p/y)});r.storageInfo=new Fe({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:f,tileInfo:e,blockBoundary:x}),this._set("rasterInfo",r)}if(s.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:C(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new U({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:n,pixelSize:a}=this.rasterInfo,o=r.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,u=this._slices?{sliceId:s.sliceId||0}:null,{data:c}=await this.request(l,{query:u,responseType:"array-buffer",signal:s.signal});if(!c)return null;const h=await this.decodePixelBlock(c,{width:r.tileInfo.size[0],height:r.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=r.blockBoundary[e];if("jpg"!==r.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return h;const{origin:d,blockWidth:p,blockHeight:m}=r,y=Math.pow(2,e),g=Math.round((n.xmin-d.x)/(a.x*y))%p,x=Math.round((n.xmax-d.x)/(a.x*y))%p,I=Math.round((d.y-n.ymax)/(a.x*y))%m,w=Math.round((d.y-n.ymin)/(a.x*y))%m,v=i===f.minCol?g:0,b=t===f.minRow?I:0,T=i===f.maxCol?x:p,R=t===f.maxRow?w:m;return Y(h,{x:v,y:b},{width:T-v,height:R-b}),h}getSliceIndex(e){if(!(null==e?void 0:e.length)||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),r=await I([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-s+this._levelOffset;const a=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,s++,i=this.identifyPixelLocation(a,s,t.datumTransformation),null===i)return null}return-1===n||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=n.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new ee({width:i,height:r,bandCount:3,extent:s.fromJSON(t.extent),spatialReference:a,pixelSize:new d({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:o,signal:l}=e,u=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:o,f:"json"},signal:l}).then((e=>T.fromJSON(e.data))).catch((()=>null)),c=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:o,f:"json"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),h=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:o,f:"json"},signal:l}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),f=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:l}).then((e=>e.data)).catch((()=>{})),p=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),m=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:l}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return I([u,c,h,f,p,m]).then((e=>{let n=null;if(t.minValues&&t.minValues.length===t.bandCount){n=[];for(let e=0;e<t.minValues.length;e++)n.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new ee({width:i,height:r,bandCount:t.bandCount,extent:s.fromJSON(t.extent),spatialReference:a,pixelSize:new d({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:n,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return(null==(t=i.variables)?void 0:t.length)&&i.variables.forEach((e=>{var t;(null==(t=e.statistics)?void 0:t.length)&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}};t([i({type:String,json:{write:!0}})],et.prototype,"datasetFormat",void 0),t([i()],et.prototype,"tileType",void 0),et=t([l("esri.layers.support.rasterDatasets.ImageServerRaster")],et);var tt=et;const it=new Map;it.set("Int8","s8"),it.set("UInt8","u8"),it.set("Int16","s16"),it.set("UInt16","u16"),it.set("Int32","s32"),it.set("UInt32","u32"),it.set("Float32","f32"),it.set("Float64","f32"),it.set("Double64","f32");const st=new Map;st.set("lerc",".lrc"),st.set("none",".til"),st.set("deflate",".pzp"),st.set("jpeg",".jzp");let rt=class extends De{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?g(e.signal):null,s=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:n}=this._parseHeader(s.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(r.statistics=null!=(a=t.statistics)?a:r.statistics,r.histograms=t.histograms,t.histograms&&!f(r.statistics)&&(r.statistics=V(t.histograms)))}this._set("rasterInfo",r),this._files=n;const o=await this.request(n.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(o.data);let l,u,c=0,h=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:x,height:I,bandCount:w}=this.rasterInfo,v=[],b="none"===m?1:w;for(;c<this._storageIndex.length;)h++,l=Math.ceil(x/d/Math.pow(y,h)),u=Math.ceil(I/p/Math.pow(y,h)),c+=l*u*b*4,v.push({maxRow:u,maxCol:l,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){const{blockWidth:r,blockHeight:n,blockBoundary:a,compression:o}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:u,pixelType:c}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(r*n);return new X({width:r,height:n,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:u,y=[];let g=0;for(g=0;g<m;g++)(!p||p.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:h[g].from,to:h[g].to},responseType:"array-buffer",signal:s.signal}));const x=await I(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(w);let b=0;for(g=0;g<m;g++)v.set(new Uint8Array(x[g].data),b),b+=x[g].data.byteLength;const T="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",R=await this.decodePixelBlock(v.buffer,{width:r,height:n,format:T,pixelType:c});let S=0,C=0;if(f!==r||d!==n){let e=R.mask;if(e)for(g=0;g<n;g++)if(C=g*r,g<d)for(S=f;S<r;S++)e[C+S]=0;else for(S=0;S<r;S++)e[C+S]=0;else for(e=new Uint8Array(r*n),R.mask=e,g=0;g<d;g++)for(C=g*r,S=0;S<f;S++)e[C+S]=1}return R}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,s,r,n,a;if(ie){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),s=new Uint8Array(r),n=0;n<e.byteLength/4;n++)for(a=0;a<4;a++)s[4*n+a]=i[4*n+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:r,pyramidScalingFactor:n,compression:a}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:u}=this.rasterInfo,c="none"===a?1:u;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=Math.pow(n,d),h=Math.ceil(o/s/m),f=Math.ceil(l/r/m),p+=h*f;m=Math.pow(n,e),h=Math.ceil(o/s/m),f=Math.ceil(l/r/m),p+=t*h+i,p*=4*c;const y=this._storageIndex.subarray(p,p+4*c);let g=0,x=0;const I=[];for(let e=0;e<c;e++)g=y[4*e+0]*Math.pow(2,32)+y[4*e+1],x=g+y[4*e+2]*Math.pow(2,32)+y[4*e+3],I.push({from:g,to:x});return{ranges:I,actualTileWidth:i<h-1?s:Math.ceil(o/m)-s*(h-1),actualTileHeight:t<f-1?r:Math.ceil(l/m)-r*(f-1)}}_parseHeader(e){const t=qe(e,"MRF_META/Raster");if(!t)throw new y("mrf:open","not a valid MRF format");const i=qe(t,"Size"),r=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),o=parseInt(i.getAttribute("c"),10),l=(We(t,"Compression")||"none").toLowerCase();if(!l||-1===["none","lerc"].indexOf(l))throw new y("mrf:open","currently does not support compression "+l);const u=We(t,"DataType")||"UInt8",c=it.get(u);if(null==c)throw new y("mrf:open","currently does not support pixel type "+u);const h=qe(t,"PageSize"),f=parseInt(h.getAttribute("x"),10),p=parseInt(h.getAttribute("y"),10),m=qe(t,"DataValues");let g,x;if(m&&(x=m.getAttribute("NoData"),null!=x&&(g=x.trim().split(" ").map((e=>parseFloat(e))))),qe(e,"MRF_META/CachedSource"))throw new y("mrf:open","currently does not support MRF referencing other data files");const I=qe(e,"MRF_META/GeoTags"),w=qe(I,"BoundingBox");if(null==w)throw new y("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const v=parseFloat(w.getAttribute("minx")),b=parseFloat(w.getAttribute("miny")),T=parseFloat(w.getAttribute("maxx")),R=parseFloat(w.getAttribute("maxy")),S=We(I,"Projection"),C=We(e,"datafile"),_=We(e,"IndexFile");let M;"LOCAL_CS[]"!==S&&(M=new n({wkt:S}));const k=new s(v,b,T,R);k.spatialReference=M;const F=qe(e,"MRF_META/Rsets"),P=parseInt(F&&F.getAttribute("scale")||"2",10),D=new Fe({origin:new d({x:k.xmin,y:k.ymax,spatialReference:M}),blockWidth:f,blockHeight:p,pyramidBlockWidth:f,pyramidBlockHeight:p,compression:l,pyramidScalingFactor:P}),O=new d({x:(T-v)/r,y:(R-b)/a,spatialReference:M});return{rasterInfo:new ee({width:r,height:a,extent:k,spatialReference:M,bandCount:o,pixelType:c,pixelSize:O,noDataValue:g,storageInfo:D}),files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",st.get(l))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ke(t)}catch{return null}}};t([i()],rt.prototype,"_files",void 0),t([i()],rt.prototype,"_storageIndex",void 0),t([i({type:String,json:{write:!0}})],rt.prototype,"datasetFormat",void 0),rt=t([l("esri.layers.support.rasterIO.MRFRaster")],rt);var nt=rt;const at=function(e,t){const i=e.get(t);return i&&i.values},ot=function(e,t){const i=e.get(t);return i&&i.values[0]};let lt=class extends De{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?g(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!r)throw new y("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:n,firstIFD:a,isBigTiff:o}=se(r),l=[];await this.readIFDs(l,r,n,a,0,o?8:4,i);const u=re(l),{width:c,height:h,tileWidth:p,tileHeight:m,planes:x,pixelType:I,compression:w,firstPyramidLevel:v,maximumPyramidLevel:b,pyramidBlockWidth:T,pyramidBlockHeight:R,tileBoundary:S,metadata:C}=u,_=s.fromJSON(u.extent),M=_.spatialReference,k=new d(_?{x:_.xmin,y:_.ymax,spatialReference:M}:{x:0,y:0}),F=new Fe({blockWidth:p,blockHeight:m,pyramidBlockWidth:T,pyramidBlockHeight:R,compression:w,origin:k,firstPyramidLevel:v,maximumPyramidLevel:b,blockBoundary:S}),P=new d({x:(_.xmax-_.xmin)/c,y:(_.ymax-_.ymin)/h,spatialReference:M}),D=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},O=new ee({width:c,height:h,bandCount:x,pixelType:I,compression:w,pixelSize:P,storageInfo:F,spatialReference:M,keyProperties:D,extent:_,statistics:C?C.statistics:null});if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var B;null!=t&&(O.statistics=null!=(B=t.statistics)?B:O.statistics,O.histograms=t.histograms,t.histograms&&!f(O.statistics)&&(O.statistics=V(t.histograms)))}if(this._set("rasterInfo",O),this._headerInfo={littleEndian:n,isBigTiff:o,ifds:l,...u},!this._headerInfo.isSupported)throw new y("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:r}=this.rasterInfo.storageInfo,n=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,a=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=r[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const l=this.getTileLocation(e,t,i);if(!l)return null;const{range:u,actualTileWidth:c,actualTileHeight:h,ifd:f}=l,{data:d}=await this.request(this.url,{range:u,responseType:"array-buffer",signal:s.signal}),p=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:n,height:a,planes:null,pixelType:null});let m,y,g;if(c!==n||h!==a){let e=p.mask;if(e)for(m=0;m<a;m++)if(g=m*n,m<h)for(y=c;y<n;y++)e[g+y]=0;else for(y=0;y<n;y++)e[g+y]=0;else for(e=new Uint8Array(n*a),p.mask=e,m=0;m<h;m++)for(g=m*n,y=0;y<c;y++)e[g+y]=1}return p}async readIFDs(e,t,i,s,r,n=4,a){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+r,to:s+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=s+r,s=0);const o=await this.readIFD(t,i,s,r,ne.TIFF_TAGS,n,a);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-r,r,n,a)}async readIFD(e,t,i,s,r=ne.TIFF_TAGS,n=4,a){if(!e)return null;const o=ae(e,t,i,s,r,n);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),n=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:a});e=r,s=n,i.forEach((i=>oe(e,t,i,s)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const n=r[0]+"."+r[1]+"."+r[2],o=await this.readIFD(e,t,i.valueOffset+6-s,s,ne.GEO_KEYS,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:s,to:s+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,s,ne.TIFF_TAGS,4,a)}}getTileLocation(e,t,i){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),a=this._headerInfo.ifds[n];if(!a)return null;const o=at(a,"TILEOFFSETS");if(void 0===o)return null;const l=at(a,"TILEBYTECOUNTS"),{minRow:u,minCol:c,maxRow:h,maxCol:f}=r[n];if(t>h||i>f||t<u||i<c)return null;const d=ot(a,"IMAGEWIDTH"),p=ot(a,"IMAGELENGTH"),m=ot(a,"TILEWIDTH"),y=ot(a,"TILELENGTH"),g=t*(f+1)+i,x=o[g],I=l[g];return null==x||null==I?null:{range:{from:x,to:x+I-1},ifd:a,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ke(t)}catch{return null}}};t([i()],lt.prototype,"_files",void 0),t([i()],lt.prototype,"_headerInfo",void 0),t([i()],lt.prototype,"_bufferSize",void 0),t([i({type:String,json:{write:!0}})],lt.prototype,"datasetFormat",void 0),lt=t([l("esri.layers.support.rasterDatasets.TIFFRaster")],lt);var ut=lt;const ct=new Map;ct.set("CRF",{desc:"Cloud Raster Format",constructor:ze}),ct.set("MRF",{desc:"Meta Raster Format",constructor:nt}),ct.set("TIFF",{desc:"GeoTIFF",constructor:ut}),ct.set("RasterTileServer",{desc:"Raster Tile Server",constructor:tt}),ct.set("JPG",{desc:"JPG Raster Format",constructor:Qe}),ct.set("PNG",{desc:"PNG Raster Format",constructor:Qe}),ct.set("GIF",{desc:"GIF Raster Format",constructor:Qe}),ct.set("BMP",{desc:"BMP Raster Format",constructor:Qe});const ht=_()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function ft(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let dt=class extends(M(k(F(P(D(Me(O(B)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=f(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),w(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new N({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const s=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(s){const e=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const s=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=Se(s,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return z(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new y("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return ct.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:s}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(r="RasterTileServer");const n={url:t,sourceJSON:s,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let a,o;if(this.supportedFormats.has(r))return a=ct.get(r).constructor,o=new a(n),await o.open({signal:e.signal}),o;if(r)throw new y("rasterfactory:open","not a supported format "+r);const l=Array.from(ct.keys());let u=0;const c=function(){return r=l[u++],r?(a=ct.get(r).constructor,o=new a(n),o.open({signal:e.signal}).then((()=>o)).catch((()=>c()))):null};return c()}static register(e,t,i){ct.has(e.toUpperCase())||ct.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new y("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};t([i()],dt.prototype,"ioConfig",void 0),t([i({type:[L],json:{write:{overridePolicy:ft}}})],dt.prototype,"bandIds",void 0),t([i({json:{write:{overridePolicy:ft}}}),H(ht)],dt.prototype,"interpolation",void 0),t([i({json:{write:!0}})],dt.prototype,"multidimensionalDefinition",void 0),t([i(J)],dt.prototype,"legendEnabled",void 0),t([i({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],dt.prototype,"isReference",void 0),t([i({type:["show","hide"]})],dt.prototype,"listMode",void 0),t([i()],dt.prototype,"sourceJSON",void 0),t([i({readOnly:!0})],dt.prototype,"version",void 0),t([i()],dt.prototype,"title",void 0),t([i({readOnly:!0,json:{read:!1}})],dt.prototype,"type",void 0),t([i({type:["ArcGISTiledImageServiceLayer"]})],dt.prototype,"operationalLayerType",void 0),t([i({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:ft,writer(e,t,i){t[i]=!e}}}})],dt.prototype,"popupEnabled",void 0),t([i({type:A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ft}}})],dt.prototype,"popupTemplate",void 0),t([i({readOnly:!0,dependsOn:["title"]})],dt.prototype,"defaultPopupTemplate",null),t([i({readOnly:!0,type:[N],dependsOn:["rasterInfo"]})],dt.prototype,"fields",null),t([i({types:we,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:ft},origins:{"web-scene":{types:Ce,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],dt.prototype,"renderer",null),t([E("renderer")],dt.prototype,"readRenderer",null),dt=t([l("esri.layers.ImageryTileLayer")],dt);var pt=dt;export default pt;
