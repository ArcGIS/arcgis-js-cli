import{p as e,y as i,cz as t,aB as r,q as a}from"../main.js";import{r as l}from"./serviceTileInfoProperty-d5279f88.js";import{L as o}from"./TilemapCache-461e4d63.js";const p=p=>{let n=class extends p{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,i){return null!=i.minLOD&&null!=i.maxLOD?e:0}readMaxScale(e,i){return null!=i.minLOD&&null!=i.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,i){return i.capabilities&&i.capabilities.indexOf("Tilemap")>-1?new o({layer:this}):null}};return e([i({json:{read:{source:"copyrightText"}}})],n.prototype,"copyright",void 0),e([i()],n.prototype,"minScale",void 0),e([t("service","minScale")],n.prototype,"readMinScale",null),e([i()],n.prototype,"maxScale",void 0),e([t("service","maxScale")],n.prototype,"readMaxScale",null),e([i({type:r})],n.prototype,"spatialReference",void 0),e([i({readOnly:!0,dependsOn:["version"]})],n.prototype,"supportsBlankTile",null),e([i(l)],n.prototype,"tileInfo",void 0),e([i()],n.prototype,"tilemapCache",void 0),e([t("service","tilemapCache",["capabilities"])],n.prototype,"readTilemapCache",null),e([i()],n.prototype,"version",void 0),n=e([a("esri.layers.mixins.ArcGISCachedService")],n),n};export{p as a};
