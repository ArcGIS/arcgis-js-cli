import{bb as t,t as e,j as s,a as i}from"../main.js";import{c as n}from"./definitions-5e24d82a.js";import{w as r,A as o}from"./Utils-b46864a6.js";import{o as l}from"./visualVariablesUtils-a8352e1b.js";function a(t,e=0,s=!1){const i=t[e+3];return t[e+0]*=i,t[e+1]*=i,t[e+2]*=i,s||(t[e+3]*=255),t}function u(t){if(!t)return 0;const{r:e,g:s,b:i,a:n}=t;return r(e*n,s*n,i*n,255*n)}function f(t){if(!t)return 0;const[e,s,i,n]=t;return r(e*(n/255),s*(n/255),i*(n/255),n)}const c=(t,e)=>t&&((...t)=>e.warn("DEBUG:",...t))||(()=>null),p=!1;function h(t,e){if(!t||!e)return t;switch(e){case"radius":case"distance":return 2*t;case"diameter":case"width":return t;case"area":return Math.sqrt(t)}return t}function m(e){return e.map((e=>function(e){return{value:e.value,size:t(e.size)}}(e)))}function z(e){if("string"==typeof e||"number"==typeof e)return t(e);const s=e;return{type:"size",expression:s.expression,stops:m(s.stops)}}const v=t=>{const e=[],i=[],r=m(t),o=r.length;for(let t=0;t<6;t++){const l=r[Math.min(t,o-1)];e.push(l.value),i.push(null==l.size?n:s(l.size))}return{values:new Float32Array(e),sizes:new Float32Array(i)}};function _(t){const e=t&&t.length>0?{}:null,s=e?{}:null;if(!e)return{vvFields:e,vvRanges:s};for(const i of t)if(i.field&&(e[i.type]=i.field),"size"===i.type){s.size||(s.size={});const t=i;switch(l(t)){case o.SIZE_MINMAX_VALUE:s.size.minMaxValue={minDataValue:t.minDataValue,maxDataValue:t.maxDataValue,minSize:z(t.minSize),maxSize:z(t.maxSize)};break;case o.SIZE_SCALE_STOPS:s.size.scaleStops={stops:m(t.stops)};break;case o.SIZE_FIELD_STOPS:if(t.levels){const e={};for(const s in t.levels)e[s]=v(t.levels[s]);s.size.fieldStops={type:"level-dependent",levels:e}}else s.size.fieldStops={type:"static",...v(t.stops)};break;case o.SIZE_UNIT_VALUE:s.size.unitValue={unit:t.valueUnit,valueRepresentation:t.valueRepresentation}}}else if("color"===i.type)s.color=y(i);else if("opacity"===i.type)s.opacity=S(i);else if("rotation"===i.type){const t=i;s.rotation={type:t.rotationType}}return{vvFields:e,vvRanges:s}}function S(t){const e={values:[0,0,0,0,0,0,0,0],opacities:[0,0,0,0,0,0,0,0]};if("string"==typeof t.field){if(!t.stops)return null;{if(t.stops.length>8)return null;const s=t.stops;for(let t=0;t<8;++t){const i=s[Math.min(t,s.length-1)];e.values[t]=i.value,e.opacities[t]=i.opacity}}}else{if(!(t.stops&&t.stops.length>=0))return null;{const s=t.stops&&t.stops.length>=0&&t.stops[0].opacity;for(let t=0;t<8;t++)e.values[t]=1/0,e.opacities[t]=s}}return e}function d(t,e,s){t[4*e+0]=s.r/255,t[4*e+1]=s.g/255,t[4*e+2]=s.b/255,t[4*e+3]=s.a}function y(t){if(e(t))return null;if(t.normalizationField)return null;const s={field:null,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};if("string"==typeof t.field){if(!t.stops)return null;{if(t.stops.length>8)return null;s.field=t.field;const e=t.stops;for(let t=0;t<8;++t){const i=e[Math.min(t,e.length-1)];s.values[t]=i.value,d(s.colors,t,i.color)}}}else{if(!(t.stops&&t.stops.length>=0))return null;{const e=t.stops&&t.stops.length>=0&&t.stops[0].color;for(let t=0;t<8;t++)s.values[t]=1/0,d(s.colors,t,e)}}for(let t=0;t<32;t+=4)a(s.colors,t,!0);return s}class b{constructor(t=Number.POSITIVE_INFINITY){this.size=0,this._start=0,this.maxSize=t,this._buffer=isFinite(t)?new Array(t):[]}get entries(){return this._buffer}enqueue(t){if(this.size===this.maxSize){const e=this._buffer[this._start];return this._buffer[this._start]=t,this._start=(this._start+1)%this.maxSize,e}return isFinite(this.maxSize)?this._buffer[(this._start+this.size++)%this.maxSize]=t:this._buffer[this._start+this.size++]=t,null}dequeue(){if(0===this.size)return null;const t=this._buffer[this._start];return this._buffer[this._start]=null,this.size--,this._start=(this._start+1)%this.maxSize,t}clear(){for(;i(this.dequeue()););}}export{b as e,f,u as i,p as l,_ as m,c as n,h as r};
