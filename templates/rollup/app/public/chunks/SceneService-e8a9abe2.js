import{f8 as e,bW as t,af as r,k as a,b$ as o,i as s,p as i,y as n,aB as l,cz as p,aT as c,cH as d,cI as u,b7 as h,q as y,du as m,fc as f,cr as v,fd as g,fe as w,ff as S,c4 as I,fg as b,bo as x,L as _,c_ as R,bU as N,c3 as O,v as T}from"../main.js";import{getSiblingOfSameTypeI as j}from"./resourceUtils-4e1e675c.js";function U(e){return e&&"getAtOrigin"in e&&"originOf"in e}function A(e){e&&e.writtenProperties&&e.writtenProperties.forEach((e=>{const t=e.target;e.newOrigin&&e.oldOrigin!==e.newOrigin&&U(t)&&t.updateOrigin(e.propName,e.newOrigin)}))}async function E(o,s,i){if(!s||!s.resources)return;const n=s.portalItem===o.portalItem?new Set(o.paths):new Set;o.paths.length=0,o.portalItem=s.portalItem;const l=new Set(s.resources.toKeep.map((e=>e.resource.path))),p=new Set,c=[];l.forEach((e=>{n.delete(e),o.paths.push(e)}));for(const t of s.resources.toUpdate)if(n.delete(t.resource.path),l.has(t.resource.path)||p.has(t.resource.path)){const{resource:r,content:a,finish:s,error:n}=t,l=j(r,e());o.paths.push(l.path),c.push(P({resource:l,content:a,finish:s,error:n},i))}else o.paths.push(t.resource.path),c.push(K(t,i)),p.add(t.resource.path);for(const e of s.resources.toAdd)c.push(P(e,i)),o.paths.push(e.resource.path);if(n.forEach((e=>{const t=s.portalItem.resourceFromPath(e);c.push(t.portalItem.removeResource(t).catch((()=>{})))})),0===c.length)return;const d=await t(c);r(i);const u=d.filter((e=>"error"in e)).map((e=>e.error));if(u.length>0)throw new a("save:resources","Failed to save one or more resources",{errors:u})}async function P(e,t){const r=await o(e.resource.portalItem.addResource(e.resource,e.content,t));if(!0!==r.ok)throw e.error&&e.error(r.error),r.error;e.finish&&e.finish(e.resource)}async function K(e,t){const r=await o(e.resource.update(e.content,t));if(!0!==r.ok)throw e.error(r.error),r.error;e.finish(e.resource)}const L=s.getLogger("esri.layers.mixins.SceneService"),F=e=>{let t=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this._debouncedSaveOperations=m((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return l.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,a=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=a?new l(a):null}}readFullExtent(e,t){const r=t.store,a=this._readSpatialReference(t);return null==a||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<q))?null:new c({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:a})}readVersion(e,t){const r=t.store,a=null!=r.version?r.version.toString():"",o={major:Number.NaN,minor:Number.NaN,versionString:a},s=a.split(".");return s.length>=2&&(o.major=parseInt(s[0],10),o.minor=parseInt(s[1],10)),o}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return f(this.url,t.name);let a=t.name||v(this.url).title;return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(a=r+" - "+a),g(a)}set url(e){const t=w(this,e,L);this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,a){S(this,e,"layers",t,a)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=I(e);return null!=this.layerId&&b(t.path)&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _verifyRootNodeAndUpdateExtent(e,t){if(e)try{return this._updateExtentFromRootPage(e,await this._fetchRootPage(e,t))}catch(e){}return this._updateExtentFromRootNode(await this._fetchRootNode(t))}async _fetchRootPage(e,t){if(!e)return x();const r=Math.floor(e.rootIndex/e.nodesPerPage),a=`${this.parsedUrl.path}/nodepages/${r}`;return(await _(a,{responseType:"json",signal:t})).data}_updateExtentFromRootPage(e,t){if(null==t||null==t.nodes)throw new a("sceneservice:invalid-node-page","Inavlid node page.");const r=t.nodes[e.rootIndex%e.nodesPerPage];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new a("sceneservice:invalid-node-page","Inavlid node page.");if(r.obb.center[0]<q)return;const o=r.obb.halfSize,s=r.obb.center[2],i=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=s-i,this.fullExtent.zmax=s+i}_updateExtentFromRootNode(e){if(null==e||null==this.fullExtent||this.fullExtent.hasZ)return;if(!Array.isArray(e.mbs)||4!==e.mbs.length||e.mbs[0]<q)return;const t=e.mbs[2],r=e.mbs[3];this.fullExtent.zmin=t-r,this.fullExtent.zmax=t+r}async _fetchRootNode(e){if(!this.rootNode)return;const t=R(this.parsedUrl.path,this.rootNode);try{return(await _(t,{query:{f:"json"},responseType:"json",signal:e})).data}catch(e){throw new a("sceneservice:root-node-missing","Root node missing.",{error:e,url:t})}}async _fetchService(e){if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await _(this.url,{query:{f:"json"},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await _(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const a=t.getTypeKeywords();for(const t of a)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...$,...t};let o=N.from(e);o||(L.error("_saveAs(): requires a portal item parameter"),await x(new a("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const s=o.portal||O.getDefault();await this._ensureLoadBeforeSave(),o.type=z,o.portal=s;const i={origin:"portal-item",url:null,messages:[],portal:s,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write(null,i)]};return await T(i.resources.pendingOperations),await this._validateAgainstJSONSchema(n,i,r),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r,1),await s._signIn(),await s.user.addItem({item:o,folder:r&&r.folder,data:n}),await E(this.resourceReferences,i,null),this.portalItem=o,A(i),i.portalItem=o,o}async _save(e){const t={...$,...e};this.portalItem||(L.error("_save(): requires the .portalItem property to be set"),await x(new a("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==z&&(L.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+z),await x(new a("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${z}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&I(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||O.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write(null,r)]};return await T(r.resources.pendingOperations),await this._validateAgainstJSONSchema(o,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:o}),await E(this.resourceReferences,r,null),A(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let o=t.messages.filter((e=>"error"===e.type)).map((e=>new a(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||M){const t=(await import("./schemaValidator-41e8f8e7.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e="Layer item did not validate:\n"+t.join("\n");if(L.error("_validateAgainstJSONSchema(): "+e),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new a("sceneservice:schema-validation",e))).concat(o);throw new a("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new a("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})}};return i([n({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],t.prototype,"id",void 0),i([n({type:l})],t.prototype,"spatialReference",void 0),i([p("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readSpatialReference",null),i([n({type:c})],t.prototype,"fullExtent",void 0),i([p("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],t.prototype,"readFullExtent",null),i([n({readOnly:!0,type:d})],t.prototype,"heightModelInfo",void 0),i([n({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],t.prototype,"minScale",void 0),i([n({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],t.prototype,"maxScale",void 0),i([n({readOnly:!0})],t.prototype,"version",void 0),i([p("version",["store.version"])],t.prototype,"readVersion",null),i([n({type:String,json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),i([n({type:String,json:{read:!1}})],t.prototype,"sublayerTitleMode",void 0),i([n({type:String})],t.prototype,"title",void 0),i([p("portal-item","title")],t.prototype,"readTitlePortalItem",null),i([p("service","title",["name"])],t.prototype,"readTitleService",null),i([n({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],t.prototype,"layerId",void 0),i([n(u)],t.prototype,"url",null),i([h("url")],t.prototype,"writeUrl",null),i([n({dependsOn:["layerId"]})],t.prototype,"parsedUrl",null),i([n({readOnly:!0})],t.prototype,"store",void 0),i([n({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],t.prototype,"rootNode",void 0),t=i([y("esri.layers.mixins.SceneService")],t),t},q=-1e38,M=!1,z="Scene Service",$={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{F as O,U as i};
